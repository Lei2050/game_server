syntax = "proto2";

package am.protocol;

option go_package = "am/protocol/out";

enum LoginResult {
    LOGIN_SUCCESS = 0;
    /** token过期*/
    TOKEN_EXPIRED = 1;
    /** 服务器没有开服*/
    WORLD_CLOSE = 2;
    /** 时间戳非法*/
    TIMESTAMP_VALID = 3;
    /** 参数错误*/
    PARAM_INVALID = 4;
    /** 服务器繁忙 */
    SERVER_IS_BUSY = 5;
    /** 注册已达上限 */
    REGISTER_LIMIT = 6;
    /** 服务器已满 */
    SERVER_IS_FULL = 7;
    /** 账号被封 */
    ACCOUNT_BAN = 8;
    /** 还未创角 */
    NO_ROLE = 9;
}

message CS_Login {
    optional string account = 1; // 账号
    optional uint32 serverid = 2; // 服务器id
    optional string device = 3; //设备类型、设备号等
    optional string client_ip = 4; //登录ip
    optional string location = 5; //地理位置
}

message SC_Login {
    optional LoginResult result = 1; // 登陆结果
    optional int32 time_zone = 2; // 服务器时区
    optional int64 server_time = 3; //服务器时间戳
}

message CS_Create {
    optional string name = 1;
    optional int32 type = 2;
}

enum CreateRet {
    OK = 0;
    REPEATED_NAME = 1; //重名
    OCCUPYING = 2; //该名字正在被占用
    ILLEGAL_NAME = 3; //非法名字
}

message SC_Create {
    optional CreateRet ret = 1;
}

message CS_Ready {
    optional int32 placeholder = 1; //占坑
}

message SC_Ready {
    optional int32 placeholder = 1; //占坑
}

enum KickoffReason {
    ERROR = 0; //异常
    RELOGIN = 1; //顶号
    GM = 2; //系统踢下线
}

message SC_Kickoff {
    optional KickoffReason reason = 1;
}

message CS_Gm {
    optional string cmd_line = 1;
}

message SC_Gm {
    optional string content = 1;
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: draw.proto

package out

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CS_Draw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`                         // 1 友情抽卡 or 1 高级抽卡
	Num      *uint32 `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`                           // 1 单抽 or  10 十连
	CostType *uint32 `protobuf:"varint,3,opt,name=cost_type,json=costType" json:"cost_type,omitempty"` // 1 钻石 , 2 单抽券
}

func (x *CS_Draw) Reset() {
	*x = CS_Draw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_Draw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_Draw) ProtoMessage() {}

func (x *CS_Draw) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_Draw.ProtoReflect.Descriptor instead.
func (*CS_Draw) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{0}
}

func (x *CS_Draw) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CS_Draw) GetNum() uint32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *CS_Draw) GetCostType() uint32 {
	if x != nil && x.CostType != nil {
		return *x.CostType
	}
	return 0
}

// 高级抽卡阶段奖励
type CS_DrawReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times *uint32 `protobuf:"varint,1,opt,name=times" json:"times,omitempty"`
}

func (x *CS_DrawReward) Reset() {
	*x = CS_DrawReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_DrawReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_DrawReward) ProtoMessage() {}

func (x *CS_DrawReward) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_DrawReward.ProtoReflect.Descriptor instead.
func (*CS_DrawReward) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{1}
}

func (x *CS_DrawReward) GetTimes() uint32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type SC_DrawReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *int32 `protobuf:"varint,1,opt,name=placeholder" json:"placeholder,omitempty"` //占坑
}

func (x *SC_DrawReward) Reset() {
	*x = SC_DrawReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_DrawReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_DrawReward) ProtoMessage() {}

func (x *SC_DrawReward) ProtoReflect() protoreflect.Message {
	mi := &file_draw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_DrawReward.ProtoReflect.Descriptor instead.
func (*SC_DrawReward) Descriptor() ([]byte, []int) {
	return file_draw_proto_rawDescGZIP(), []int{2}
}

func (x *SC_DrawReward) GetPlaceholder() int32 {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return 0
}

var File_draw_proto protoreflect.FileDescriptor

var file_draw_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x4c, 0x0a, 0x07, 0x43, 0x53, 0x5f,
	0x44, 0x72, 0x61, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x53, 0x5f, 0x44, 0x72,
	0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x31,
	0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x42, 0x11, 0x5a, 0x0f, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x6f, 0x75, 0x74,
}

var (
	file_draw_proto_rawDescOnce sync.Once
	file_draw_proto_rawDescData = file_draw_proto_rawDesc
)

func file_draw_proto_rawDescGZIP() []byte {
	file_draw_proto_rawDescOnce.Do(func() {
		file_draw_proto_rawDescData = protoimpl.X.CompressGZIP(file_draw_proto_rawDescData)
	})
	return file_draw_proto_rawDescData
}

var file_draw_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_draw_proto_goTypes = []interface{}{
	(*CS_Draw)(nil),       // 0: am.protocol.CS_Draw
	(*CS_DrawReward)(nil), // 1: am.protocol.CS_DrawReward
	(*SC_DrawReward)(nil), // 2: am.protocol.SC_DrawReward
}
var file_draw_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_draw_proto_init() }
func file_draw_proto_init() {
	if File_draw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_draw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_Draw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_DrawReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_DrawReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draw_proto_goTypes,
		DependencyIndexes: file_draw_proto_depIdxs,
		MessageInfos:      file_draw_proto_msgTypes,
	}.Build()
	File_draw_proto = out.File
	file_draw_proto_rawDesc = nil
	file_draw_proto_goTypes = nil
	file_draw_proto_depIdxs = nil
}

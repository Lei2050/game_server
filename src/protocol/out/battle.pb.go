// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: battle.proto

package out

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnitType int32

const (
	UnitType_HERO           UnitType = 1 //英雄
	UnitType_MONSTER        UnitType = 2 //怪物
	UnitType_RESOURCE       UnitType = 3 //资源
	UnitType_RESOURCE_POINT UnitType = 4 //矿点
	UnitType_DROP_ITEM      UnitType = 5 //掉落物
)

// Enum value maps for UnitType.
var (
	UnitType_name = map[int32]string{
		1: "HERO",
		2: "MONSTER",
		3: "RESOURCE",
		4: "RESOURCE_POINT",
		5: "DROP_ITEM",
	}
	UnitType_value = map[string]int32{
		"HERO":           1,
		"MONSTER":        2,
		"RESOURCE":       3,
		"RESOURCE_POINT": 4,
		"DROP_ITEM":      5,
	}
)

func (x UnitType) Enum() *UnitType {
	p := new(UnitType)
	*p = x
	return p
}

func (x UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[0].Descriptor()
}

func (UnitType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[0]
}

func (x UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnitType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnitType(num)
	return nil
}

// Deprecated: Use UnitType.Descriptor instead.
func (UnitType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

type UnitAttrType int32

const (
	UnitAttrType_Level         UnitAttrType = 0
	UnitAttrType_Hp            UnitAttrType = 1  //生命
	UnitAttrType_Atk           UnitAttrType = 2  //攻击
	UnitAttrType_Def           UnitAttrType = 3  //防御
	UnitAttrType_Hit           UnitAttrType = 4  //命中
	UnitAttrType_Dodge         UnitAttrType = 5  //闪避
	UnitAttrType_Crit          UnitAttrType = 6  //暴击
	UnitAttrType_AntiCrit      UnitAttrType = 7  //抗暴
	UnitAttrType_HpRatio       UnitAttrType = 8  //生命比例
	UnitAttrType_AtkRatio      UnitAttrType = 9  //攻击比例
	UnitAttrType_DefRatio      UnitAttrType = 10 //防御比例
	UnitAttrType_HitRatio      UnitAttrType = 11 //命中比例
	UnitAttrType_DodgeRatio    UnitAttrType = 12 //闪避比例
	UnitAttrType_CritRatio     UnitAttrType = 13 //暴击比例
	UnitAttrType_AntiCritRatio UnitAttrType = 14 //抗暴比例
	UnitAttrType_CritHurt      UnitAttrType = 15 //暴伤加成
	UnitAttrType_MoveSpeed     UnitAttrType = 16 //移动速度
	//HpRestore = 17; //生命回复
	UnitAttrType_HitRate            UnitAttrType = 18 //初始命中率
	UnitAttrType_DodgeRate          UnitAttrType = 19 //初始闪避率
	UnitAttrType_CritRate           UnitAttrType = 20 //初始暴击率
	UnitAttrType_AntiCritRate       UnitAttrType = 21 //初始抗暴率
	UnitAttrType_DamageReduceRate   UnitAttrType = 22 //初始受到伤害减免率
	UnitAttrType_MoveSpeedRatio     UnitAttrType = 23 //移动速度比例
	UnitAttrType_Sight              UnitAttrType = 24 //视野
	UnitAttrType_SightRatio         UnitAttrType = 25 //视野百分比
	UnitAttrType_ShotMoveSpeed      UnitAttrType = 26 //射击移动速度
	UnitAttrType_ShotMoveSpeedRatio UnitAttrType = 27 //射击移动速度
	UnitAttrType_DamageAddValue     UnitAttrType = 28 //增伤
	UnitAttrType_DamageAddRatio     UnitAttrType = 29 //增伤比例
	UnitAttrType_DamageReduce       UnitAttrType = 30 //减伤值
	UnitAttrType_ExpUpRatio         UnitAttrType = 31 //经验提升百分比
	UnitAttrType_HpBase             UnitAttrType = 32 //hp基础
	UnitAttrType_UnitAttrMax        UnitAttrType = 33
)

// Enum value maps for UnitAttrType.
var (
	UnitAttrType_name = map[int32]string{
		0:  "Level",
		1:  "Hp",
		2:  "Atk",
		3:  "Def",
		4:  "Hit",
		5:  "Dodge",
		6:  "Crit",
		7:  "AntiCrit",
		8:  "HpRatio",
		9:  "AtkRatio",
		10: "DefRatio",
		11: "HitRatio",
		12: "DodgeRatio",
		13: "CritRatio",
		14: "AntiCritRatio",
		15: "CritHurt",
		16: "MoveSpeed",
		18: "HitRate",
		19: "DodgeRate",
		20: "CritRate",
		21: "AntiCritRate",
		22: "DamageReduceRate",
		23: "MoveSpeedRatio",
		24: "Sight",
		25: "SightRatio",
		26: "ShotMoveSpeed",
		27: "ShotMoveSpeedRatio",
		28: "DamageAddValue",
		29: "DamageAddRatio",
		30: "DamageReduce",
		31: "ExpUpRatio",
		32: "HpBase",
		33: "UnitAttrMax",
	}
	UnitAttrType_value = map[string]int32{
		"Level":              0,
		"Hp":                 1,
		"Atk":                2,
		"Def":                3,
		"Hit":                4,
		"Dodge":              5,
		"Crit":               6,
		"AntiCrit":           7,
		"HpRatio":            8,
		"AtkRatio":           9,
		"DefRatio":           10,
		"HitRatio":           11,
		"DodgeRatio":         12,
		"CritRatio":          13,
		"AntiCritRatio":      14,
		"CritHurt":           15,
		"MoveSpeed":          16,
		"HitRate":            18,
		"DodgeRate":          19,
		"CritRate":           20,
		"AntiCritRate":       21,
		"DamageReduceRate":   22,
		"MoveSpeedRatio":     23,
		"Sight":              24,
		"SightRatio":         25,
		"ShotMoveSpeed":      26,
		"ShotMoveSpeedRatio": 27,
		"DamageAddValue":     28,
		"DamageAddRatio":     29,
		"DamageReduce":       30,
		"ExpUpRatio":         31,
		"HpBase":             32,
		"UnitAttrMax":        33,
	}
)

func (x UnitAttrType) Enum() *UnitAttrType {
	p := new(UnitAttrType)
	*p = x
	return p
}

func (x UnitAttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitAttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[1].Descriptor()
}

func (UnitAttrType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[1]
}

func (x UnitAttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnitAttrType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnitAttrType(num)
	return nil
}

// Deprecated: Use UnitAttrType.Descriptor instead.
func (UnitAttrType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

//枪械属性
type WeaponAttrType int32

const (
	WeaponAttrType_WeaponPalaceholder        WeaponAttrType = 0
	WeaponAttrType_WeaponHp                  WeaponAttrType = 1  //生命上限值
	WeaponAttrType_WeaponHpRatio             WeaponAttrType = 2  //生命比例
	WeaponAttrType_WeaponAtk                 WeaponAttrType = 3  //攻击
	WeaponAttrType_WeaponAtkRatio            WeaponAttrType = 4  //攻击比例
	WeaponAttrType_WeaponDef                 WeaponAttrType = 5  //防御
	WeaponAttrType_WeaponDefRatio            WeaponAttrType = 6  //防御比例
	WeaponAttrType_WeaponBulletTime          WeaponAttrType = 7  //指定装备装弹时间间隔减少X毫秒
	WeaponAttrType_WeaponBulletCapacity      WeaponAttrType = 8  //指定装备弹夹容量提升定值
	WeaponAttrType_WeaponBulletCapacityRatio WeaponAttrType = 9  //指定装备弹夹容量提升百分比
	WeaponAttrType_WeaponRecoilRemainTime    WeaponAttrType = 10 //指定装备后坐力持续时间降低X毫秒
	WeaponAttrType_WeaponWeaponAttrMax       WeaponAttrType = 11
)

// Enum value maps for WeaponAttrType.
var (
	WeaponAttrType_name = map[int32]string{
		0:  "WeaponPalaceholder",
		1:  "WeaponHp",
		2:  "WeaponHpRatio",
		3:  "WeaponAtk",
		4:  "WeaponAtkRatio",
		5:  "WeaponDef",
		6:  "WeaponDefRatio",
		7:  "WeaponBulletTime",
		8:  "WeaponBulletCapacity",
		9:  "WeaponBulletCapacityRatio",
		10: "WeaponRecoilRemainTime",
		11: "WeaponWeaponAttrMax",
	}
	WeaponAttrType_value = map[string]int32{
		"WeaponPalaceholder":        0,
		"WeaponHp":                  1,
		"WeaponHpRatio":             2,
		"WeaponAtk":                 3,
		"WeaponAtkRatio":            4,
		"WeaponDef":                 5,
		"WeaponDefRatio":            6,
		"WeaponBulletTime":          7,
		"WeaponBulletCapacity":      8,
		"WeaponBulletCapacityRatio": 9,
		"WeaponRecoilRemainTime":    10,
		"WeaponWeaponAttrMax":       11,
	}
)

func (x WeaponAttrType) Enum() *WeaponAttrType {
	p := new(WeaponAttrType)
	*p = x
	return p
}

func (x WeaponAttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponAttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[2].Descriptor()
}

func (WeaponAttrType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[2]
}

func (x WeaponAttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WeaponAttrType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WeaponAttrType(num)
	return nil
}

// Deprecated: Use WeaponAttrType.Descriptor instead.
func (WeaponAttrType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2}
}

type WeaponSkillAttrType int32

const (
	WeaponSkillAttrType_WeaponSkillPalaceholder       WeaponSkillAttrType = 0
	WeaponSkillAttrType_WeaponSkillDamageRatio        WeaponSkillAttrType = 1 //伤害增加百分比
	WeaponSkillAttrType_WeaponSkillWeaponSkillAttrMax WeaponSkillAttrType = 2
)

// Enum value maps for WeaponSkillAttrType.
var (
	WeaponSkillAttrType_name = map[int32]string{
		0: "WeaponSkillPalaceholder",
		1: "WeaponSkillDamageRatio",
		2: "WeaponSkillWeaponSkillAttrMax",
	}
	WeaponSkillAttrType_value = map[string]int32{
		"WeaponSkillPalaceholder":       0,
		"WeaponSkillDamageRatio":        1,
		"WeaponSkillWeaponSkillAttrMax": 2,
	}
)

func (x WeaponSkillAttrType) Enum() *WeaponSkillAttrType {
	p := new(WeaponSkillAttrType)
	*p = x
	return p
}

func (x WeaponSkillAttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeaponSkillAttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[3].Descriptor()
}

func (WeaponSkillAttrType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[3]
}

func (x WeaponSkillAttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WeaponSkillAttrType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WeaponSkillAttrType(num)
	return nil
}

// Deprecated: Use WeaponSkillAttrType.Descriptor instead.
func (WeaponSkillAttrType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3}
}

type BuffAttrType int32

const (
	BuffAttrType_BuffPalaceholder BuffAttrType = 0
	BuffAttrType_BuffAddTime      BuffAttrType = 1 //增加时间
	BuffAttrType_BuffAddLayer     BuffAttrType = 2 //增加层数
	BuffAttrType_BuffAdd          BuffAttrType = 3 //增加buff
	BuffAttrType_BuffBuffAttrMax  BuffAttrType = 4
)

// Enum value maps for BuffAttrType.
var (
	BuffAttrType_name = map[int32]string{
		0: "BuffPalaceholder",
		1: "BuffAddTime",
		2: "BuffAddLayer",
		3: "BuffAdd",
		4: "BuffBuffAttrMax",
	}
	BuffAttrType_value = map[string]int32{
		"BuffPalaceholder": 0,
		"BuffAddTime":      1,
		"BuffAddLayer":     2,
		"BuffAdd":          3,
		"BuffBuffAttrMax":  4,
	}
)

func (x BuffAttrType) Enum() *BuffAttrType {
	p := new(BuffAttrType)
	*p = x
	return p
}

func (x BuffAttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuffAttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[4].Descriptor()
}

func (BuffAttrType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[4]
}

func (x BuffAttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BuffAttrType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BuffAttrType(num)
	return nil
}

// Deprecated: Use BuffAttrType.Descriptor instead.
func (BuffAttrType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4}
}

type DropAttrType int32

const (
	DropAttrType_DropPalaceholder     DropAttrType = 0
	DropAttrType_DropOneMoreDropRatio DropAttrType = 1 //击杀目标后掉落包多掉落1次概率提升百分比
	DropAttrType_DropDropBoxIdRatio   DropAttrType = 2 //开启宝箱时指定掉落包概率提升百分比
	DropAttrType_DropDropAttrMax      DropAttrType = 3
)

// Enum value maps for DropAttrType.
var (
	DropAttrType_name = map[int32]string{
		0: "DropPalaceholder",
		1: "DropOneMoreDropRatio",
		2: "DropDropBoxIdRatio",
		3: "DropDropAttrMax",
	}
	DropAttrType_value = map[string]int32{
		"DropPalaceholder":     0,
		"DropOneMoreDropRatio": 1,
		"DropDropBoxIdRatio":   2,
		"DropDropAttrMax":      3,
	}
)

func (x DropAttrType) Enum() *DropAttrType {
	p := new(DropAttrType)
	*p = x
	return p
}

func (x DropAttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropAttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[5].Descriptor()
}

func (DropAttrType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[5]
}

func (x DropAttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DropAttrType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DropAttrType(num)
	return nil
}

// Deprecated: Use DropAttrType.Descriptor instead.
func (DropAttrType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5}
}

type UnitState int32

const (
	UnitState_IDLE          UnitState = 1  //无所事事
	UnitState_WALKING       UnitState = 2  //移动中
	UnitState_DEAD          UnitState = 3  //死亡
	UnitState_DIZZY         UnitState = 4  //眩晕
	UnitState_CASTING_SKILL UnitState = 5  //正在放技能
	UnitState_NEWBEE        UnitState = 6  //无敌（牛逼）
	UnitState_IMMOBILIZED   UnitState = 7  //定身
	UnitState_FORCE_MOVE    UnitState = 8  //强制位移中，用于重装和滑冰
	UnitState_IMMU_BUFF     UnitState = 9  //免疫所有buff
	UnitState_IN_BATTLE     UnitState = 10 //进战状态，如果有这个状态，说明处于进战状态，否则处于脱战状态，目前只针对怪物
	UnitState_WARNING       UnitState = 11 //警告，闪红光
	UnitState_WARNING_2     UnitState = 12 //警告，高频闪红光
)

// Enum value maps for UnitState.
var (
	UnitState_name = map[int32]string{
		1:  "IDLE",
		2:  "WALKING",
		3:  "DEAD",
		4:  "DIZZY",
		5:  "CASTING_SKILL",
		6:  "NEWBEE",
		7:  "IMMOBILIZED",
		8:  "FORCE_MOVE",
		9:  "IMMU_BUFF",
		10: "IN_BATTLE",
		11: "WARNING",
		12: "WARNING_2",
	}
	UnitState_value = map[string]int32{
		"IDLE":          1,
		"WALKING":       2,
		"DEAD":          3,
		"DIZZY":         4,
		"CASTING_SKILL": 5,
		"NEWBEE":        6,
		"IMMOBILIZED":   7,
		"FORCE_MOVE":    8,
		"IMMU_BUFF":     9,
		"IN_BATTLE":     10,
		"WARNING":       11,
		"WARNING_2":     12,
	}
)

func (x UnitState) Enum() *UnitState {
	p := new(UnitState)
	*p = x
	return p
}

func (x UnitState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitState) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[6].Descriptor()
}

func (UnitState) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[6]
}

func (x UnitState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnitState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnitState(num)
	return nil
}

// Deprecated: Use UnitState.Descriptor instead.
func (UnitState) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{6}
}

type ItemReason int32

const (
	ItemReason_System   ItemReason = 0 //系统发的
	ItemReason_Gm       ItemReason = 1 //作弊获得
	ItemReason_Resource ItemReason = 2 //采集资源
	ItemReason_Drop     ItemReason = 3 //采集掉落物
)

// Enum value maps for ItemReason.
var (
	ItemReason_name = map[int32]string{
		0: "System",
		1: "Gm",
		2: "Resource",
		3: "Drop",
	}
	ItemReason_value = map[string]int32{
		"System":   0,
		"Gm":       1,
		"Resource": 2,
		"Drop":     3,
	}
)

func (x ItemReason) Enum() *ItemReason {
	p := new(ItemReason)
	*p = x
	return p
}

func (x ItemReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemReason) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[7].Descriptor()
}

func (ItemReason) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[7]
}

func (x ItemReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ItemReason) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ItemReason(num)
	return nil
}

// Deprecated: Use ItemReason.Descriptor instead.
func (ItemReason) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{7}
}

//伤害状态
type DamageStatus int32

const (
	DamageStatus_DamageStatusCrit DamageStatus = 1
)

// Enum value maps for DamageStatus.
var (
	DamageStatus_name = map[int32]string{
		1: "DamageStatusCrit",
	}
	DamageStatus_value = map[string]int32{
		"DamageStatusCrit": 1,
	}
)

func (x DamageStatus) Enum() *DamageStatus {
	p := new(DamageStatus)
	*p = x
	return p
}

func (x DamageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DamageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[8].Descriptor()
}

func (DamageStatus) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[8]
}

func (x DamageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DamageStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DamageStatus(num)
	return nil
}

// Deprecated: Use DamageStatus.Descriptor instead.
func (DamageStatus) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8}
}

//关卡阶段
type StagePhase int32

const (
	StagePhase_OccupyCenter    StagePhase = 1 //占据中心建组
	StagePhase_CollectResource StagePhase = 2 //采集资源
	StagePhase_ProtectCenter   StagePhase = 3 //守护雅典娜
)

// Enum value maps for StagePhase.
var (
	StagePhase_name = map[int32]string{
		1: "OccupyCenter",
		2: "CollectResource",
		3: "ProtectCenter",
	}
	StagePhase_value = map[string]int32{
		"OccupyCenter":    1,
		"CollectResource": 2,
		"ProtectCenter":   3,
	}
)

func (x StagePhase) Enum() *StagePhase {
	p := new(StagePhase)
	*p = x
	return p
}

func (x StagePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StagePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[9].Descriptor()
}

func (StagePhase) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[9]
}

func (x StagePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StagePhase) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StagePhase(num)
	return nil
}

// Deprecated: Use StagePhase.Descriptor instead.
func (StagePhase) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9}
}

//客户端与战斗服的心跳
type CS_BattleHeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CS_BattleHeartBeat) Reset() {
	*x = CS_BattleHeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_BattleHeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_BattleHeartBeat) ProtoMessage() {}

func (x *CS_BattleHeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_BattleHeartBeat.ProtoReflect.Descriptor instead.
func (*CS_BattleHeartBeat) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

type SC_BattleHeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SC_BattleHeartBeat) Reset() {
	*x = SC_BattleHeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_BattleHeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_BattleHeartBeat) ProtoMessage() {}

func (x *SC_BattleHeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_BattleHeartBeat.ProtoReflect.Descriptor instead.
func (*SC_BattleHeartBeat) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

//请求进入战斗场景，请求打副本，
type CS_EnterStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId *uint32 `protobuf:"varint,1,opt,name=stage_id,json=stageId" json:"stage_id,omitempty"`
}

func (x *CS_EnterStage) Reset() {
	*x = CS_EnterStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_EnterStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_EnterStage) ProtoMessage() {}

func (x *CS_EnterStage) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_EnterStage.ProtoReflect.Descriptor instead.
func (*CS_EnterStage) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2}
}

func (x *CS_EnterStage) GetStageId() uint32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

type SC_EnterStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId *uint32 `protobuf:"varint,1,opt,name=stage_id,json=stageId" json:"stage_id,omitempty"`
	Address *string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (x *SC_EnterStage) Reset() {
	*x = SC_EnterStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_EnterStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_EnterStage) ProtoMessage() {}

func (x *SC_EnterStage) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_EnterStage.ProtoReflect.Descriptor instead.
func (*SC_EnterStage) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3}
}

func (x *SC_EnterStage) GetStageId() uint32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *SC_EnterStage) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

//登陆战斗服
type CS_BattleLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId *uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"` //房间id
	Uid    *uint64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`                     //玩家id
	Pass   *string `protobuf:"bytes,3,opt,name=pass" json:"pass,omitempty"`                    //密码
}

func (x *CS_BattleLogin) Reset() {
	*x = CS_BattleLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_BattleLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_BattleLogin) ProtoMessage() {}

func (x *CS_BattleLogin) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_BattleLogin.ProtoReflect.Descriptor instead.
func (*CS_BattleLogin) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4}
}

func (x *CS_BattleLogin) GetRoomId() uint64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *CS_BattleLogin) GetUid() uint64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *CS_BattleLogin) GetPass() string {
	if x != nil && x.Pass != nil {
		return *x.Pass
	}
	return ""
}

//登陆战斗服
type SC_BattleLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId *uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"` //房间id
	Uid    *uint64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`                     //玩家id
	Pass   *string `protobuf:"bytes,3,opt,name=pass" json:"pass,omitempty"`                    //密码
}

func (x *SC_BattleLogin) Reset() {
	*x = SC_BattleLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_BattleLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_BattleLogin) ProtoMessage() {}

func (x *SC_BattleLogin) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_BattleLogin.ProtoReflect.Descriptor instead.
func (*SC_BattleLogin) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5}
}

func (x *SC_BattleLogin) GetRoomId() uint64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *SC_BattleLogin) GetUid() uint64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *SC_BattleLogin) GetPass() string {
	if x != nil && x.Pass != nil {
		return *x.Pass
	}
	return ""
}

//加载完毕，可以开始关卡了
type CS_BattleReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *int32 `protobuf:"varint,1,opt,name=placeholder" json:"placeholder,omitempty"` //占坑
}

func (x *CS_BattleReady) Reset() {
	*x = CS_BattleReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_BattleReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_BattleReady) ProtoMessage() {}

func (x *CS_BattleReady) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_BattleReady.ProtoReflect.Descriptor instead.
func (*CS_BattleReady) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{6}
}

func (x *CS_BattleReady) GetPlaceholder() int32 {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return 0
}

//客户端收到这个，就进入场景
type SC_BattleReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *int32 `protobuf:"varint,1,opt,name=placeholder" json:"placeholder,omitempty"` //占坑
}

func (x *SC_BattleReady) Reset() {
	*x = SC_BattleReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_BattleReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_BattleReady) ProtoMessage() {}

func (x *SC_BattleReady) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_BattleReady.ProtoReflect.Descriptor instead.
func (*SC_BattleReady) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{7}
}

func (x *SC_BattleReady) GetPlaceholder() int32 {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return 0
}

type CS_BattleGm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str *string `protobuf:"bytes,1,opt,name=str" json:"str,omitempty"`
}

func (x *CS_BattleGm) Reset() {
	*x = CS_BattleGm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_BattleGm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_BattleGm) ProtoMessage() {}

func (x *CS_BattleGm) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_BattleGm.ProtoReflect.Descriptor instead.
func (*CS_BattleGm) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8}
}

func (x *CS_BattleGm) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

type SC_BattleGm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str *string `protobuf:"bytes,1,opt,name=str" json:"str,omitempty"` //输出结果
}

func (x *SC_BattleGm) Reset() {
	*x = SC_BattleGm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_BattleGm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_BattleGm) ProtoMessage() {}

func (x *SC_BattleGm) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_BattleGm.ProtoReflect.Descriptor instead.
func (*SC_BattleGm) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9}
}

func (x *SC_BattleGm) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

//位置坐标
type Pos3D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Z *int32 `protobuf:"varint,3,opt,name=z" json:"z,omitempty"`
}

func (x *Pos3D) Reset() {
	*x = Pos3D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos3D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos3D) ProtoMessage() {}

func (x *Pos3D) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos3D.ProtoReflect.Descriptor instead.
func (*Pos3D) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10}
}

func (x *Pos3D) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Pos3D) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Pos3D) GetZ() int32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

//目前只是示例
//移动
type CS_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //单位id
	P      *Pos3D  `protobuf:"bytes,2,opt,name=p" json:"p,omitempty"`                          //期望目标位置
	Num    *uint64 `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`                    //编号，debug用
}

func (x *CS_Move) Reset() {
	*x = CS_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_Move) ProtoMessage() {}

func (x *CS_Move) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_Move.ProtoReflect.Descriptor instead.
func (*CS_Move) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{11}
}

func (x *CS_Move) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_Move) GetP() *Pos3D {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *CS_Move) GetNum() uint64 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

//服务器发出的移动指令
type SC_Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //单位id
	P      *Pos3D  `protobuf:"bytes,2,opt,name=p" json:"p,omitempty"`                          //当前移动的目标位置
	P2     *Pos3D  `protobuf:"bytes,3,opt,name=p2" json:"p2,omitempty"`                        //如果已经到达了p，则继续往p2移动
	Ms     *int32  `protobuf:"varint,4,opt,name=ms" json:"ms,omitempty"`                       //移动到p1需要的时间
	Ms2    *int32  `protobuf:"varint,5,opt,name=ms2" json:"ms2,omitempty"`                     //p1移动到p2需要的时间
}

func (x *SC_Move) Reset() {
	*x = SC_Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_Move) ProtoMessage() {}

func (x *SC_Move) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_Move.ProtoReflect.Descriptor instead.
func (*SC_Move) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{12}
}

func (x *SC_Move) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_Move) GetP() *Pos3D {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *SC_Move) GetP2() *Pos3D {
	if x != nil {
		return x.P2
	}
	return nil
}

func (x *SC_Move) GetMs() int32 {
	if x != nil && x.Ms != nil {
		return *x.Ms
	}
	return 0
}

func (x *SC_Move) GetMs2() int32 {
	if x != nil && x.Ms2 != nil {
		return *x.Ms2
	}
	return 0
}

//掉落物
type DropItemUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int64 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`   //类型：2-道具，3-武器
	Value *int64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"` //类型值：道具id、武器id
	Size  *int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`   //数量
}

func (x *DropItemUnit) Reset() {
	*x = DropItemUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropItemUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemUnit) ProtoMessage() {}

func (x *DropItemUnit) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemUnit.ProtoReflect.Descriptor instead.
func (*DropItemUnit) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{13}
}

func (x *DropItemUnit) GetType() int64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *DropItemUnit) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *DropItemUnit) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type UnitBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hp       *int64        `protobuf:"varint,1,opt,name=hp" json:"hp,omitempty"`             //血量
	Mana     *int64        `protobuf:"varint,2,opt,name=mana" json:"mana,omitempty"`         //蓝
	Velocity *int32        `protobuf:"varint,3,opt,name=velocity" json:"velocity,omitempty"` //速率
	Pos      *Pos3D        `protobuf:"bytes,4,opt,name=pos" json:"pos,omitempty"`            //位置
	Type     *UnitType     `protobuf:"varint,5,opt,name=type,enum=am.protocol.UnitType" json:"type,omitempty"`
	OwnerId  *uint64       `protobuf:"varint,6,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`   //被占领者
	DropItem *DropItemUnit `protobuf:"bytes,7,opt,name=drop_item,json=dropItem" json:"drop_item,omitempty"` // type == DROP_ITEM 时有效
	UserName *string       `protobuf:"bytes,8,opt,name=user_name,json=userName" json:"user_name,omitempty"` //单位名称
}

func (x *UnitBaseInfo) Reset() {
	*x = UnitBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitBaseInfo) ProtoMessage() {}

func (x *UnitBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitBaseInfo.ProtoReflect.Descriptor instead.
func (*UnitBaseInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{14}
}

func (x *UnitBaseInfo) GetHp() int64 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *UnitBaseInfo) GetMana() int64 {
	if x != nil && x.Mana != nil {
		return *x.Mana
	}
	return 0
}

func (x *UnitBaseInfo) GetVelocity() int32 {
	if x != nil && x.Velocity != nil {
		return *x.Velocity
	}
	return 0
}

func (x *UnitBaseInfo) GetPos() *Pos3D {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *UnitBaseInfo) GetType() UnitType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return UnitType_HERO
}

func (x *UnitBaseInfo) GetOwnerId() uint64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *UnitBaseInfo) GetDropItem() *DropItemUnit {
	if x != nil {
		return x.DropItem
	}
	return nil
}

func (x *UnitBaseInfo) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

//增加单位
type SC_AddUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId *int64        `protobuf:"varint,1,opt,name=data_id,json=dataId" json:"data_id,omitempty"` //配置表中的id，如果是掉落物则为道具id
	UnitId *uint64       `protobuf:"varint,2,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //单位id
	Info   *UnitBaseInfo `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
}

func (x *SC_AddUnit) Reset() {
	*x = SC_AddUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_AddUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_AddUnit) ProtoMessage() {}

func (x *SC_AddUnit) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_AddUnit.ProtoReflect.Descriptor instead.
func (*SC_AddUnit) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{15}
}

func (x *SC_AddUnit) GetDataId() int64 {
	if x != nil && x.DataId != nil {
		return *x.DataId
	}
	return 0
}

func (x *SC_AddUnit) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_AddUnit) GetInfo() *UnitBaseInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//移除单位
type SC_RemoveUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
}

func (x *SC_RemoveUnit) Reset() {
	*x = SC_RemoveUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_RemoveUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_RemoveUnit) ProtoMessage() {}

func (x *SC_RemoveUnit) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_RemoveUnit.ProtoReflect.Descriptor instead.
func (*SC_RemoveUnit) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{16}
}

func (x *SC_RemoveUnit) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

type UnitAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *UnitAttrType `protobuf:"varint,1,opt,name=type,enum=am.protocol.UnitAttrType" json:"type,omitempty"`
	Value *int64        `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *UnitAttr) Reset() {
	*x = UnitAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitAttr) ProtoMessage() {}

func (x *UnitAttr) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitAttr.ProtoReflect.Descriptor instead.
func (*UnitAttr) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{17}
}

func (x *UnitAttr) GetType() UnitAttrType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return UnitAttrType_Level
}

func (x *UnitAttr) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

//同步单位基础信息
type SC_SyncUnitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64       `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //单位id
	Info   *UnitBaseInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	//repeated UnitAttr attrs = 3; //属性
	Attrs      []int64              `protobuf:"varint,3,rep,name=attrs" json:"attrs,omitempty"`                                         //属性
	WeaponAttr []*WeaponAttr        `protobuf:"bytes,4,rep,name=weapon_attr,json=weaponAttr" json:"weapon_attr,omitempty"`              //枪械属性
	SkillAttr  []*SkillAttr         `protobuf:"bytes,5,rep,name=skill_attr,json=skillAttr" json:"skill_attr,omitempty"`                 //技能属性
	DropAttr   []*DropAttr          `protobuf:"bytes,6,rep,name=drop_attr,json=dropAttr" json:"drop_attr,omitempty"`                    //掉落属性
	Useless    *UnitAttr            `protobuf:"bytes,100,opt,name=useless" json:"useless,omitempty"`                                    //没用,但是别删
	Useless2   *WeaponAttrType      `protobuf:"varint,101,opt,name=useless2,enum=am.protocol.WeaponAttrType" json:"useless2,omitempty"` //同上
	Useless4   *BuffAttrType        `protobuf:"varint,102,opt,name=useless4,enum=am.protocol.BuffAttrType" json:"useless4,omitempty"`
	Useless3   *WeaponSkillAttrType `protobuf:"varint,103,opt,name=useless3,enum=am.protocol.WeaponSkillAttrType" json:"useless3,omitempty"`
	Useless5   *DropAttrType        `protobuf:"varint,104,opt,name=useless5,enum=am.protocol.DropAttrType" json:"useless5,omitempty"`
}

func (x *SC_SyncUnitInfo) Reset() {
	*x = SC_SyncUnitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_SyncUnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_SyncUnitInfo) ProtoMessage() {}

func (x *SC_SyncUnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_SyncUnitInfo.ProtoReflect.Descriptor instead.
func (*SC_SyncUnitInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{18}
}

func (x *SC_SyncUnitInfo) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_SyncUnitInfo) GetInfo() *UnitBaseInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetAttrs() []int64 {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetWeaponAttr() []*WeaponAttr {
	if x != nil {
		return x.WeaponAttr
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetSkillAttr() []*SkillAttr {
	if x != nil {
		return x.SkillAttr
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetDropAttr() []*DropAttr {
	if x != nil {
		return x.DropAttr
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetUseless() *UnitAttr {
	if x != nil {
		return x.Useless
	}
	return nil
}

func (x *SC_SyncUnitInfo) GetUseless2() WeaponAttrType {
	if x != nil && x.Useless2 != nil {
		return *x.Useless2
	}
	return WeaponAttrType_WeaponPalaceholder
}

func (x *SC_SyncUnitInfo) GetUseless4() BuffAttrType {
	if x != nil && x.Useless4 != nil {
		return *x.Useless4
	}
	return BuffAttrType_BuffPalaceholder
}

func (x *SC_SyncUnitInfo) GetUseless3() WeaponSkillAttrType {
	if x != nil && x.Useless3 != nil {
		return *x.Useless3
	}
	return WeaponSkillAttrType_WeaponSkillPalaceholder
}

func (x *SC_SyncUnitInfo) GetUseless5() DropAttrType {
	if x != nil && x.Useless5 != nil {
		return *x.Useless5
	}
	return DropAttrType_DropPalaceholder
}

type WeaponAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponId *uint64 `protobuf:"varint,1,opt,name=weapon_id,json=weaponId" json:"weapon_id,omitempty"`
	Attrs    []int64 `protobuf:"varint,2,rep,name=attrs" json:"attrs,omitempty"`
}

func (x *WeaponAttr) Reset() {
	*x = WeaponAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponAttr) ProtoMessage() {}

func (x *WeaponAttr) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponAttr.ProtoReflect.Descriptor instead.
func (*WeaponAttr) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{19}
}

func (x *WeaponAttr) GetWeaponId() uint64 {
	if x != nil && x.WeaponId != nil {
		return *x.WeaponId
	}
	return 0
}

func (x *WeaponAttr) GetAttrs() []int64 {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type SkillAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId *uint64 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	Attrs   []int64 `protobuf:"varint,2,rep,name=attrs" json:"attrs,omitempty"`
}

func (x *SkillAttr) Reset() {
	*x = SkillAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillAttr) ProtoMessage() {}

func (x *SkillAttr) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillAttr.ProtoReflect.Descriptor instead.
func (*SkillAttr) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{20}
}

func (x *SkillAttr) GetSkillId() uint64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *SkillAttr) GetAttrs() []int64 {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type DropAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoxId *uint64 `protobuf:"varint,1,opt,name=box_id,json=boxId" json:"box_id,omitempty"`
	Attrs []int64 `protobuf:"varint,2,rep,name=attrs" json:"attrs,omitempty"`
}

func (x *DropAttr) Reset() {
	*x = DropAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAttr) ProtoMessage() {}

func (x *DropAttr) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAttr.ProtoReflect.Descriptor instead.
func (*DropAttr) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{21}
}

func (x *DropAttr) GetBoxId() uint64 {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return 0
}

func (x *DropAttr) GetAttrs() []int64 {
	if x != nil {
		return x.Attrs
	}
	return nil
}

//与客户端联调用，快速开房
type CS_QuickTakeRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *int32 `protobuf:"varint,1,opt,name=placeholder" json:"placeholder,omitempty"` //占坑
}

func (x *CS_QuickTakeRoom) Reset() {
	*x = CS_QuickTakeRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_QuickTakeRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_QuickTakeRoom) ProtoMessage() {}

func (x *CS_QuickTakeRoom) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_QuickTakeRoom.ProtoReflect.Descriptor instead.
func (*CS_QuickTakeRoom) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{22}
}

func (x *CS_QuickTakeRoom) GetPlaceholder() int32 {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return 0
}

type SC_QuickTakeRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok *uint32 `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (x *SC_QuickTakeRoom) Reset() {
	*x = SC_QuickTakeRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_QuickTakeRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_QuickTakeRoom) ProtoMessage() {}

func (x *SC_QuickTakeRoom) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_QuickTakeRoom.ProtoReflect.Descriptor instead.
func (*SC_QuickTakeRoom) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{23}
}

func (x *SC_QuickTakeRoom) GetOk() uint32 {
	if x != nil && x.Ok != nil {
		return *x.Ok
	}
	return 0
}

//可刷新的资源点也作为一种单位（unit）。
//理论上，采集动作也是释放技能的一种，（这样也便于抽象）；
//目前还没有技能系统，就直接写个明确协议吧。
type CS_CollectionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //执行采集的单位id
	ResId  *uint64 `protobuf:"varint,2,opt,name=res_id,json=resId" json:"res_id,omitempty"`    //采集资源的单位id
}

func (x *CS_CollectionResource) Reset() {
	*x = CS_CollectionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_CollectionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_CollectionResource) ProtoMessage() {}

func (x *CS_CollectionResource) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_CollectionResource.ProtoReflect.Descriptor instead.
func (*CS_CollectionResource) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{24}
}

func (x *CS_CollectionResource) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_CollectionResource) GetResId() uint64 {
	if x != nil && x.ResId != nil {
		return *x.ResId
	}
	return 0
}

type SC_CollectionResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //执行采集的单位id
	ResId  *uint64 `protobuf:"varint,2,opt,name=res_id,json=resId" json:"res_id,omitempty"`    //采集资源的单位id
	Type   *int64  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Value  *int64  `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Size   *int64  `protobuf:"varint,5,opt,name=size" json:"size,omitempty"`
}

func (x *SC_CollectionResource) Reset() {
	*x = SC_CollectionResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_CollectionResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_CollectionResource) ProtoMessage() {}

func (x *SC_CollectionResource) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_CollectionResource.ProtoReflect.Descriptor instead.
func (*SC_CollectionResource) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{25}
}

func (x *SC_CollectionResource) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_CollectionResource) GetResId() uint64 {
	if x != nil && x.ResId != nil {
		return *x.ResId
	}
	return 0
}

func (x *SC_CollectionResource) GetType() int64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SC_CollectionResource) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *SC_CollectionResource) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type SC_StateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"` //单位
	//state未来应该是一个状态集合（按位检测），比如“移动中”和“正在释放技能”会一起存在。
	//目前的话，就先代表一个状态吧：1-移动中，2-死亡，3-眩晕，4-释放技能(可被打断)，5-释放技能中(不可被打断)。
	//因为采集资源也是释放技能，所以“采集资源中”也就是4。
	States []UnitState `protobuf:"varint,2,rep,name=states,enum=am.protocol.UnitState" json:"states,omitempty"` //状态集合
}

func (x *SC_StateChange) Reset() {
	*x = SC_StateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_StateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_StateChange) ProtoMessage() {}

func (x *SC_StateChange) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_StateChange.ProtoReflect.Descriptor instead.
func (*SC_StateChange) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{26}
}

func (x *SC_StateChange) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_StateChange) GetStates() []UnitState {
	if x != nil {
		return x.States
	}
	return nil
}

//奖励信息
type BigMapAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int64 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`   //奖励类型
	Value *int64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"` //在配置表中的id
	Size  *int64 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`   //数量
}

func (x *BigMapAward) Reset() {
	*x = BigMapAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigMapAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigMapAward) ProtoMessage() {}

func (x *BigMapAward) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigMapAward.ProtoReflect.Descriptor instead.
func (*BigMapAward) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{27}
}

func (x *BigMapAward) GetType() int64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BigMapAward) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *BigMapAward) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

//获得奖励、资源
type SC_AwardsGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Awards []*BigMapAward `protobuf:"bytes,1,rep,name=awards" json:"awards,omitempty"`
}

func (x *SC_AwardsGet) Reset() {
	*x = SC_AwardsGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_AwardsGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_AwardsGet) ProtoMessage() {}

func (x *SC_AwardsGet) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_AwardsGet.ProtoReflect.Descriptor instead.
func (*SC_AwardsGet) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{28}
}

func (x *SC_AwardsGet) GetAwards() []*BigMapAward {
	if x != nil {
		return x.Awards
	}
	return nil
}

//告知客户端主控单位，临时协议，后面对接到养成系统的账号系统中去。
type SC_MainUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
}

func (x *SC_MainUnit) Reset() {
	*x = SC_MainUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_MainUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_MainUnit) ProtoMessage() {}

func (x *SC_MainUnit) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_MainUnit.ProtoReflect.Descriptor instead.
func (*SC_MainUnit) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{29}
}

func (x *SC_MainUnit) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

//增加道具
type SC_UnitAddItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64     `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	ItemId  *int64      `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum *int64      `protobuf:"varint,3,opt,name=item_num,json=itemNum" json:"item_num,omitempty"` // 增加/减少数量
	Num     *int64      `protobuf:"varint,4,opt,name=num" json:"num,omitempty"`                        //当前数量
	Reason  *ItemReason `protobuf:"varint,5,opt,name=reason,enum=am.protocol.ItemReason" json:"reason,omitempty"`
}

func (x *SC_UnitAddItem) Reset() {
	*x = SC_UnitAddItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_UnitAddItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_UnitAddItem) ProtoMessage() {}

func (x *SC_UnitAddItem) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_UnitAddItem.ProtoReflect.Descriptor instead.
func (*SC_UnitAddItem) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{30}
}

func (x *SC_UnitAddItem) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_UnitAddItem) GetItemId() int64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *SC_UnitAddItem) GetItemNum() int64 {
	if x != nil && x.ItemNum != nil {
		return *x.ItemNum
	}
	return 0
}

func (x *SC_UnitAddItem) GetNum() int64 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *SC_UnitAddItem) GetReason() ItemReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ItemReason_System
}

//同步道具数量
type SC_UnitSyncItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	ItemId  *int64  `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemNum *int64  `protobuf:"varint,3,opt,name=item_num,json=itemNum" json:"item_num,omitempty"`
}

func (x *SC_UnitSyncItem) Reset() {
	*x = SC_UnitSyncItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_UnitSyncItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_UnitSyncItem) ProtoMessage() {}

func (x *SC_UnitSyncItem) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_UnitSyncItem.ProtoReflect.Descriptor instead.
func (*SC_UnitSyncItem) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{31}
}

func (x *SC_UnitSyncItem) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_UnitSyncItem) GetItemId() int64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *SC_UnitSyncItem) GetItemNum() int64 {
	if x != nil && x.ItemNum != nil {
		return *x.ItemNum
	}
	return 0
}

//释放技能
type CS_CastSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`    //释放技能的单位
	SkillId *int64  `protobuf:"varint,2,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"` //技能id
	//optional uint64 target_id = 3; //目标 - 如果没有目标则不传
	TargetPos   *Pos3D `protobuf:"bytes,4,opt,name=target_pos,json=targetPos" json:"target_pos,omitempty"` //目标位置 - 如果没有目标位置则不传
	Orientation *Pos3D `protobuf:"bytes,5,opt,name=orientation" json:"orientation,omitempty"`              //释放技能时的朝向，用于后坐力相关
}

func (x *CS_CastSkill) Reset() {
	*x = CS_CastSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_CastSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_CastSkill) ProtoMessage() {}

func (x *CS_CastSkill) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_CastSkill.ProtoReflect.Descriptor instead.
func (*CS_CastSkill) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{32}
}

func (x *CS_CastSkill) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_CastSkill) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *CS_CastSkill) GetTargetPos() *Pos3D {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *CS_CastSkill) GetOrientation() *Pos3D {
	if x != nil {
		return x.Orientation
	}
	return nil
}

//释放技能同步，目前直接广播
type SC_CastSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId      *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`         //释放技能的单位
	SkillId     *int64  `protobuf:"varint,2,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`      //技能id
	TargetId    *uint64 `protobuf:"varint,3,opt,name=target_id,json=targetId" json:"target_id,omitempty"`   //目标 - 如果没有目标则不传
	TargetPos   *Pos3D  `protobuf:"bytes,4,opt,name=target_pos,json=targetPos" json:"target_pos,omitempty"` //目标位置 - 如果没有目标位置则不传
	Orientation *Pos3D  `protobuf:"bytes,5,opt,name=orientation" json:"orientation,omitempty"`              //释放技能时的朝向，用于后坐力相关
}

func (x *SC_CastSkill) Reset() {
	*x = SC_CastSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_CastSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_CastSkill) ProtoMessage() {}

func (x *SC_CastSkill) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_CastSkill.ProtoReflect.Descriptor instead.
func (*SC_CastSkill) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{33}
}

func (x *SC_CastSkill) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_CastSkill) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *SC_CastSkill) GetTargetId() uint64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *SC_CastSkill) GetTargetPos() *Pos3D {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *SC_CastSkill) GetOrientation() *Pos3D {
	if x != nil {
		return x.Orientation
	}
	return nil
}

//伤害同步
type DamageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId    *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`            //遭受伤害的单位
	SrcUnitId *uint64 `protobuf:"varint,2,opt,name=src_unit_id,json=srcUnitId" json:"src_unit_id,omitempty"` //伤害来源单位
	SkillId   *int64  `protobuf:"varint,3,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`         //伤害来源技能
	Damage    *int64  `protobuf:"varint,4,opt,name=damage" json:"damage,omitempty"`                          //伤害量
	Hp        *int64  `protobuf:"varint,5,opt,name=hp" json:"hp,omitempty"`                                  //目标当前血量
	BuffId    *int64  `protobuf:"varint,6,opt,name=buff_id,json=buffId" json:"buff_id,omitempty"`            //伤害来源buff
	Status    []int64 `protobuf:"varint,7,rep,name=status" json:"status,omitempty"`                          //状态 暴击等
}

func (x *DamageInfo) Reset() {
	*x = DamageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DamageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DamageInfo) ProtoMessage() {}

func (x *DamageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DamageInfo.ProtoReflect.Descriptor instead.
func (*DamageInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{34}
}

func (x *DamageInfo) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *DamageInfo) GetSrcUnitId() uint64 {
	if x != nil && x.SrcUnitId != nil {
		return *x.SrcUnitId
	}
	return 0
}

func (x *DamageInfo) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *DamageInfo) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *DamageInfo) GetHp() int64 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *DamageInfo) GetBuffId() int64 {
	if x != nil && x.BuffId != nil {
		return *x.BuffId
	}
	return 0
}

func (x *DamageInfo) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

type CS_SyncDamage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DamageInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (x *CS_SyncDamage) Reset() {
	*x = CS_SyncDamage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_SyncDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_SyncDamage) ProtoMessage() {}

func (x *CS_SyncDamage) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_SyncDamage.ProtoReflect.Descriptor instead.
func (*CS_SyncDamage) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{35}
}

func (x *CS_SyncDamage) GetInfos() []*DamageInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type SC_SyncDamage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DamageInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (x *SC_SyncDamage) Reset() {
	*x = SC_SyncDamage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_SyncDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_SyncDamage) ProtoMessage() {}

func (x *SC_SyncDamage) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_SyncDamage.ProtoReflect.Descriptor instead.
func (*SC_SyncDamage) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{36}
}

func (x *SC_SyncDamage) GetInfos() []*DamageInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

//装填弹夹
type CS_ReloadGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	GunId  *int64  `protobuf:"varint,2,opt,name=gun_id,json=gunId" json:"gun_id,omitempty"`
}

func (x *CS_ReloadGun) Reset() {
	*x = CS_ReloadGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_ReloadGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_ReloadGun) ProtoMessage() {}

func (x *CS_ReloadGun) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_ReloadGun.ProtoReflect.Descriptor instead.
func (*CS_ReloadGun) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{37}
}

func (x *CS_ReloadGun) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_ReloadGun) GetGunId() int64 {
	if x != nil && x.GunId != nil {
		return *x.GunId
	}
	return 0
}

type WeaponInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GunId     *int64 `protobuf:"varint,1,opt,name=gun_id,json=gunId" json:"gun_id,omitempty"`
	BulletNun *int64 `protobuf:"varint,2,opt,name=bullet_nun,json=bulletNun" json:"bullet_nun,omitempty"` //当前弹夹里的子弹数量
	ClipNum   *int64 `protobuf:"varint,3,opt,name=clip_num,json=clipNum" json:"clip_num,omitempty"`       //所有备用子弹数量
}

func (x *WeaponInfo) Reset() {
	*x = WeaponInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeaponInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponInfo) ProtoMessage() {}

func (x *WeaponInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponInfo.ProtoReflect.Descriptor instead.
func (*WeaponInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{38}
}

func (x *WeaponInfo) GetGunId() int64 {
	if x != nil && x.GunId != nil {
		return *x.GunId
	}
	return 0
}

func (x *WeaponInfo) GetBulletNun() int64 {
	if x != nil && x.BulletNun != nil {
		return *x.BulletNun
	}
	return 0
}

func (x *WeaponInfo) GetClipNum() int64 {
	if x != nil && x.ClipNum != nil {
		return *x.ClipNum
	}
	return 0
}

//同步枪械信息
type SC_SyncGunInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64       `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	Infos   []*WeaponInfo `protobuf:"bytes,2,rep,name=infos" json:"infos,omitempty"`
	IsCover *bool         `protobuf:"varint,3,opt,name=is_cover,json=isCover" json:"is_cover,omitempty"` //是否是正个列表，true的话就覆盖掉现有的
}

func (x *SC_SyncGunInfo) Reset() {
	*x = SC_SyncGunInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_SyncGunInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_SyncGunInfo) ProtoMessage() {}

func (x *SC_SyncGunInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_SyncGunInfo.ProtoReflect.Descriptor instead.
func (*SC_SyncGunInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{39}
}

func (x *SC_SyncGunInfo) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_SyncGunInfo) GetInfos() []*WeaponInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *SC_SyncGunInfo) GetIsCover() bool {
	if x != nil && x.IsCover != nil {
		return *x.IsCover
	}
	return false
}

type CS_ShiftGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	GunId  *int64  `protobuf:"varint,2,opt,name=gun_id,json=gunId" json:"gun_id,omitempty"`
}

func (x *CS_ShiftGun) Reset() {
	*x = CS_ShiftGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_ShiftGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_ShiftGun) ProtoMessage() {}

func (x *CS_ShiftGun) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_ShiftGun.ProtoReflect.Descriptor instead.
func (*CS_ShiftGun) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{40}
}

func (x *CS_ShiftGun) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_ShiftGun) GetGunId() int64 {
	if x != nil && x.GunId != nil {
		return *x.GunId
	}
	return 0
}

type SC_ShiftGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	GunId  *int64  `protobuf:"varint,2,opt,name=gun_id,json=gunId" json:"gun_id,omitempty"`
}

func (x *SC_ShiftGun) Reset() {
	*x = SC_ShiftGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_ShiftGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_ShiftGun) ProtoMessage() {}

func (x *SC_ShiftGun) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_ShiftGun.ProtoReflect.Descriptor instead.
func (*SC_ShiftGun) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{41}
}

func (x *SC_ShiftGun) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_ShiftGun) GetGunId() int64 {
	if x != nil && x.GunId != nil {
		return *x.GunId
	}
	return 0
}

type CS_StopMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	Num    *uint64 `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`
}

func (x *CS_StopMove) Reset() {
	*x = CS_StopMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_StopMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_StopMove) ProtoMessage() {}

func (x *CS_StopMove) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_StopMove.ProtoReflect.Descriptor instead.
func (*CS_StopMove) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{42}
}

func (x *CS_StopMove) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_StopMove) GetNum() uint64 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

//重启关卡
type CS_StageRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CS_StageRestart) Reset() {
	*x = CS_StageRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_StageRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_StageRestart) ProtoMessage() {}

func (x *CS_StageRestart) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_StageRestart.ProtoReflect.Descriptor instead.
func (*CS_StageRestart) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{43}
}

//重启关卡
type SC_StageRestart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *int32 `protobuf:"varint,1,opt,name=placeholder" json:"placeholder,omitempty"` //占坑
}

func (x *SC_StageRestart) Reset() {
	*x = SC_StageRestart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_StageRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_StageRestart) ProtoMessage() {}

func (x *SC_StageRestart) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_StageRestart.ProtoReflect.Descriptor instead.
func (*SC_StageRestart) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{44}
}

func (x *SC_StageRestart) GetPlaceholder() int32 {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return 0
}

//关卡阶段倒计时
type SC_StagePhaseTiming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPhase *StagePhase `protobuf:"varint,1,opt,name=current_phase,json=currentPhase,enum=am.protocol.StagePhase" json:"current_phase,omitempty"` //当前阶段
	Timing_      *int64      `protobuf:"varint,2,opt,name=timing_,json=timing" json:"timing_,omitempty"`                                               //距离当前阶段结束时间（毫秒）
}

func (x *SC_StagePhaseTiming) Reset() {
	*x = SC_StagePhaseTiming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_StagePhaseTiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_StagePhaseTiming) ProtoMessage() {}

func (x *SC_StagePhaseTiming) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_StagePhaseTiming.ProtoReflect.Descriptor instead.
func (*SC_StagePhaseTiming) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{45}
}

func (x *SC_StagePhaseTiming) GetCurrentPhase() StagePhase {
	if x != nil && x.CurrentPhase != nil {
		return *x.CurrentPhase
	}
	return StagePhase_OccupyCenter
}

func (x *SC_StagePhaseTiming) GetTiming_() int64 {
	if x != nil && x.Timing_ != nil {
		return *x.Timing_
	}
	return 0
}

//尸潮来袭倒计时
type SC_StageMonsterComingTiming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timing_ *int64 `protobuf:"varint,1,opt,name=timing_,json=timing" json:"timing_,omitempty"` //下一次尸潮来袭倒计时（毫秒）
}

func (x *SC_StageMonsterComingTiming) Reset() {
	*x = SC_StageMonsterComingTiming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_StageMonsterComingTiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_StageMonsterComingTiming) ProtoMessage() {}

func (x *SC_StageMonsterComingTiming) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_StageMonsterComingTiming.ProtoReflect.Descriptor instead.
func (*SC_StageMonsterComingTiming) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{46}
}

func (x *SC_StageMonsterComingTiming) GetTiming_() int64 {
	if x != nil && x.Timing_ != nil {
		return *x.Timing_
	}
	return 0
}

type BuffInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId     *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`               //增加buff的单位
	FromUnitId *uint64 `protobuf:"varint,2,opt,name=from_unit_id,json=fromUnitId" json:"from_unit_id,omitempty"` //增加buff的单位
	BuffId     *int64  `protobuf:"varint,3,opt,name=buff_id,json=buffId" json:"buff_id,omitempty"`               //配置表id
	Level      *int64  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`                               //预留
	Duration   *int64  `protobuf:"varint,5,opt,name=duration" json:"duration,omitempty"`                         //buff剩余持续时间
}

func (x *BuffInfo) Reset() {
	*x = BuffInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffInfo) ProtoMessage() {}

func (x *BuffInfo) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffInfo.ProtoReflect.Descriptor instead.
func (*BuffInfo) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{47}
}

func (x *BuffInfo) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *BuffInfo) GetFromUnitId() uint64 {
	if x != nil && x.FromUnitId != nil {
		return *x.FromUnitId
	}
	return 0
}

func (x *BuffInfo) GetBuffId() int64 {
	if x != nil && x.BuffId != nil {
		return *x.BuffId
	}
	return 0
}

func (x *BuffInfo) GetLevel() int64 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *BuffInfo) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

//加buff
type SC_AddBuff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffInfos []*BuffInfo `protobuf:"bytes,1,rep,name=buff_infos,json=buffInfos" json:"buff_infos,omitempty"`
}

func (x *SC_AddBuff) Reset() {
	*x = SC_AddBuff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_AddBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_AddBuff) ProtoMessage() {}

func (x *SC_AddBuff) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_AddBuff.ProtoReflect.Descriptor instead.
func (*SC_AddBuff) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{48}
}

func (x *SC_AddBuff) GetBuffInfos() []*BuffInfo {
	if x != nil {
		return x.BuffInfos
	}
	return nil
}

//删除buff
type SC_DelBuff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	BuffIds []int64 `protobuf:"varint,2,rep,name=buff_ids,json=buffIds" json:"buff_ids,omitempty"` //配置表id
}

func (x *SC_DelBuff) Reset() {
	*x = SC_DelBuff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_DelBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_DelBuff) ProtoMessage() {}

func (x *SC_DelBuff) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_DelBuff.ProtoReflect.Descriptor instead.
func (*SC_DelBuff) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{49}
}

func (x *SC_DelBuff) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_DelBuff) GetBuffIds() []int64 {
	if x != nil {
		return x.BuffIds
	}
	return nil
}

//增加法术场
type SC_AddMagicField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DataId *uint64 `protobuf:"varint,2,opt,name=data_id,json=dataId" json:"data_id,omitempty"` //surface 表id
	Pos    *Pos3D  `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`
}

func (x *SC_AddMagicField) Reset() {
	*x = SC_AddMagicField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_AddMagicField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_AddMagicField) ProtoMessage() {}

func (x *SC_AddMagicField) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_AddMagicField.ProtoReflect.Descriptor instead.
func (*SC_AddMagicField) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{50}
}

func (x *SC_AddMagicField) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SC_AddMagicField) GetDataId() uint64 {
	if x != nil && x.DataId != nil {
		return *x.DataId
	}
	return 0
}

func (x *SC_AddMagicField) GetPos() *Pos3D {
	if x != nil {
		return x.Pos
	}
	return nil
}

//删除法术场
type SC_DelMagicField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (x *SC_DelMagicField) Reset() {
	*x = SC_DelMagicField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_DelMagicField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_DelMagicField) ProtoMessage() {}

func (x *SC_DelMagicField) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_DelMagicField.ProtoReflect.Descriptor instead.
func (*SC_DelMagicField) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{51}
}

func (x *SC_DelMagicField) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

//服务器通知技能打断
type SC_UnitInterruptSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	SkillId *int64  `protobuf:"varint,2,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
}

func (x *SC_UnitInterruptSkill) Reset() {
	*x = SC_UnitInterruptSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_UnitInterruptSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_UnitInterruptSkill) ProtoMessage() {}

func (x *SC_UnitInterruptSkill) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_UnitInterruptSkill.ProtoReflect.Descriptor instead.
func (*SC_UnitInterruptSkill) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{52}
}

func (x *SC_UnitInterruptSkill) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_UnitInterruptSkill) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

type SC_Tips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tip *string `protobuf:"bytes,1,opt,name=tip" json:"tip,omitempty"`
}

func (x *SC_Tips) Reset() {
	*x = SC_Tips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_Tips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_Tips) ProtoMessage() {}

func (x *SC_Tips) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_Tips.ProtoReflect.Descriptor instead.
func (*SC_Tips) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{53}
}

func (x *SC_Tips) GetTip() string {
	if x != nil && x.Tip != nil {
		return *x.Tip
	}
	return ""
}

//同步所有道具数量
type SC_SyncAllItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId []int64 `protobuf:"varint,1,rep,name=item_id,json=itemId" json:"item_id,omitempty"`
	Num    []int64 `protobuf:"varint,2,rep,name=num" json:"num,omitempty"`
}

func (x *SC_SyncAllItems) Reset() {
	*x = SC_SyncAllItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_SyncAllItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_SyncAllItems) ProtoMessage() {}

func (x *SC_SyncAllItems) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_SyncAllItems.ProtoReflect.Descriptor instead.
func (*SC_SyncAllItems) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{54}
}

func (x *SC_SyncAllItems) GetItemId() []int64 {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *SC_SyncAllItems) GetNum() []int64 {
	if x != nil {
		return x.Num
	}
	return nil
}

//获取经验
type SC_GetExp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp   *uint64 `protobuf:"varint,1,opt,name=exp" json:"exp,omitempty"` //总经验
	Level *uint64 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (x *SC_GetExp) Reset() {
	*x = SC_GetExp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_GetExp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_GetExp) ProtoMessage() {}

func (x *SC_GetExp) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_GetExp.ProtoReflect.Descriptor instead.
func (*SC_GetExp) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{55}
}

func (x *SC_GetExp) GetExp() uint64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *SC_GetExp) GetLevel() uint64 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

//（三选一）获取能力
type SC_GetAbility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []uint64 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
	Level *uint32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (x *SC_GetAbility) Reset() {
	*x = SC_GetAbility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_GetAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_GetAbility) ProtoMessage() {}

func (x *SC_GetAbility) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_GetAbility.ProtoReflect.Descriptor instead.
func (*SC_GetAbility) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{56}
}

func (x *SC_GetAbility) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SC_GetAbility) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

type CS_PickAbility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	Level  *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"` //选择哪个等级的能力
	Idx    *int64  `protobuf:"varint,3,opt,name=idx" json:"idx,omitempty"`     //能力下标
}

func (x *CS_PickAbility) Reset() {
	*x = CS_PickAbility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_PickAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_PickAbility) ProtoMessage() {}

func (x *CS_PickAbility) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_PickAbility.ProtoReflect.Descriptor instead.
func (*CS_PickAbility) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{57}
}

func (x *CS_PickAbility) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_PickAbility) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CS_PickAbility) GetIdx() int64 {
	if x != nil && x.Idx != nil {
		return *x.Idx
	}
	return 0
}

//射击移动
type CS_ShotMove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	Status *uint32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"` // 1 开始射击 2 停止射击
}

func (x *CS_ShotMove) Reset() {
	*x = CS_ShotMove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_ShotMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_ShotMove) ProtoMessage() {}

func (x *CS_ShotMove) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_ShotMove.ProtoReflect.Descriptor instead.
func (*CS_ShotMove) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{58}
}

func (x *CS_ShotMove) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *CS_ShotMove) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   *int64  `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Value    *uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`       //当前值，用于需要完成多次的任务类型
	Finished *bool   `protobuf:"varint,3,opt,name=finished" json:"finished,omitempty"` //任务是否完成
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{59}
}

func (x *Task) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *Task) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *Task) GetFinished() bool {
	if x != nil && x.Finished != nil {
		return *x.Finished
	}
	return false
}

//同步任务信息，用于任务信息变更，比如value值变化
type SC_SyncTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (x *SC_SyncTask) Reset() {
	*x = SC_SyncTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_SyncTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_SyncTask) ProtoMessage() {}

func (x *SC_SyncTask) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_SyncTask.ProtoReflect.Descriptor instead.
func (*SC_SyncTask) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{60}
}

func (x *SC_SyncTask) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

//请求当前任务列表
type CS_TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CS_TaskList) Reset() {
	*x = CS_TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_TaskList) ProtoMessage() {}

func (x *CS_TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_TaskList.ProtoReflect.Descriptor instead.
func (*CS_TaskList) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{61}
}

type SC_TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (x *SC_TaskList) Reset() {
	*x = SC_TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_TaskList) ProtoMessage() {}

func (x *SC_TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_TaskList.ProtoReflect.Descriptor instead.
func (*SC_TaskList) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{62}
}

func (x *SC_TaskList) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

//怪物来袭通知
type SC_MonsterWaveComing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx    *int32 `protobuf:"varint,1,opt,name=idx" json:"idx,omitempty"`                     //第几波怪，从1开始
	IsBoos *bool  `protobuf:"varint,2,opt,name=is_boos,json=isBoos" json:"is_boos,omitempty"` //是否是boss
}

func (x *SC_MonsterWaveComing) Reset() {
	*x = SC_MonsterWaveComing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_MonsterWaveComing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_MonsterWaveComing) ProtoMessage() {}

func (x *SC_MonsterWaveComing) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_MonsterWaveComing.ProtoReflect.Descriptor instead.
func (*SC_MonsterWaveComing) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{63}
}

func (x *SC_MonsterWaveComing) GetIdx() int32 {
	if x != nil && x.Idx != nil {
		return *x.Idx
	}
	return 0
}

func (x *SC_MonsterWaveComing) GetIsBoos() bool {
	if x != nil && x.IsBoos != nil {
		return *x.IsBoos
	}
	return false
}

//user_id预留功能，后续能断线重连，客户端目前先随机生成一个吧
//room_name预留功能，目前先填空，多人可以进入相同scene_id的不同场景。
type CS_EnterScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SceneId  *int64  `protobuf:"varint,1,opt,name=scene_id,json=sceneId" json:"scene_id,omitempty"`   //bigmap_main.bigmap_id
	UserId   *uint64 `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`      //玩家id
	RoomName *string `protobuf:"bytes,3,opt,name=room_name,json=roomName" json:"room_name,omitempty"` //房间名称，预留
	UserName *string `protobuf:"bytes,4,opt,name=user_name,json=userName" json:"user_name,omitempty"` //玩家昵称
}

func (x *CS_EnterScene) Reset() {
	*x = CS_EnterScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_EnterScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_EnterScene) ProtoMessage() {}

func (x *CS_EnterScene) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_EnterScene.ProtoReflect.Descriptor instead.
func (*CS_EnterScene) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{64}
}

func (x *CS_EnterScene) GetSceneId() int64 {
	if x != nil && x.SceneId != nil {
		return *x.SceneId
	}
	return 0
}

func (x *CS_EnterScene) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *CS_EnterScene) GetRoomName() string {
	if x != nil && x.RoomName != nil {
		return *x.RoomName
	}
	return ""
}

func (x *CS_EnterScene) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

type SC_EnterScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *string `protobuf:"bytes,1,opt,name=ret" json:"ret,omitempty"` //为空则ok，不为空说明有错误。
}

func (x *SC_EnterScene) Reset() {
	*x = SC_EnterScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_EnterScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_EnterScene) ProtoMessage() {}

func (x *SC_EnterScene) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_EnterScene.ProtoReflect.Descriptor instead.
func (*SC_EnterScene) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{65}
}

func (x *SC_EnterScene) GetRet() string {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return ""
}

//技能在指定位置释放了，比如手雷在pos点炸了
type CS_SkillCastOnPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId *int64 `protobuf:"varint,1,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"`
	Pos     *Pos3D `protobuf:"bytes,2,opt,name=pos" json:"pos,omitempty"`
}

func (x *CS_SkillCastOnPos) Reset() {
	*x = CS_SkillCastOnPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CS_SkillCastOnPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_SkillCastOnPos) ProtoMessage() {}

func (x *CS_SkillCastOnPos) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_SkillCastOnPos.ProtoReflect.Descriptor instead.
func (*CS_SkillCastOnPos) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{66}
}

func (x *CS_SkillCastOnPos) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *CS_SkillCastOnPos) GetPos() *Pos3D {
	if x != nil {
		return x.Pos
	}
	return nil
}

type SC_MonsterWakeUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId   *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`       //惊醒的怪物
	TargetId *uint64 `protobuf:"varint,2,opt,name=target_id,json=targetId" json:"target_id,omitempty"` //引起惊醒的hero
	Pos      *Pos3D  `protobuf:"bytes,3,opt,name=pos" json:"pos,omitempty"`                            //引发惊醒的位置，比如声音的位置
}

func (x *SC_MonsterWakeUp) Reset() {
	*x = SC_MonsterWakeUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_MonsterWakeUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_MonsterWakeUp) ProtoMessage() {}

func (x *SC_MonsterWakeUp) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_MonsterWakeUp.ProtoReflect.Descriptor instead.
func (*SC_MonsterWakeUp) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{67}
}

func (x *SC_MonsterWakeUp) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_MonsterWakeUp) GetTargetId() uint64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *SC_MonsterWakeUp) GetPos() *Pos3D {
	if x != nil {
		return x.Pos
	}
	return nil
}

//发射子弹
type SC_CastBullet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId  *uint64 `protobuf:"varint,1,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`    //发射子弹的单位
	Ori     *Pos3D  `protobuf:"bytes,2,opt,name=ori" json:"ori,omitempty"`                         //方向
	SkillId *int64  `protobuf:"varint,3,opt,name=skill_id,json=skillId" json:"skill_id,omitempty"` //技能
}

func (x *SC_CastBullet) Reset() {
	*x = SC_CastBullet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_CastBullet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_CastBullet) ProtoMessage() {}

func (x *SC_CastBullet) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_CastBullet.ProtoReflect.Descriptor instead.
func (*SC_CastBullet) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{68}
}

func (x *SC_CastBullet) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *SC_CastBullet) GetOri() *Pos3D {
	if x != nil {
		return x.Ori
	}
	return nil
}

func (x *SC_CastBullet) GetSkillId() int64 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

var File_battle_proto protoreflect.FileDescriptor

var file_battle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x43,
	0x53, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x43, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x53, 0x5f, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x43, 0x53, 0x5f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x53, 0x43,
	0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x0e, 0x43,
	0x53, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22,
	0x32, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x47, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x74, 0x72, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x47, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x31, 0x0a, 0x05, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x22, 0x56, 0x0a, 0x07, 0x43, 0x53, 0x5f, 0x4d,
	0x6f, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x01,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x01, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x22, 0x8a, 0x01, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x01, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x33, 0x44, 0x52, 0x01, 0x70, 0x12, 0x22, 0x0a, 0x02, 0x70, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x02, 0x70, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x73, 0x32, 0x22, 0x4c, 0x0a,
	0x0c, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x8f, 0x02, 0x0a, 0x0c,
	0x55, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x68, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x68, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x61, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x61, 0x6e, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a,
	0x0a, 0x53, 0x43, 0x5f, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x28, 0x0a, 0x0d,
	0x53, 0x43, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaa, 0x04, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x53,
	0x79, 0x6e, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x0a, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x64, 0x72,
	0x6f, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x41, 0x74, 0x74, 0x72, 0x12, 0x2f,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x52, 0x07, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x32, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x32, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x34, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x41, 0x74, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x34, 0x12,
	0x3c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x33, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x33, 0x12, 0x35, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x35, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x72,
	0x6f, 0x70, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x35, 0x22, 0x3f, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x3c, 0x0a, 0x09, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x08, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x10,
	0x43, 0x53, 0x5f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x54, 0x61,
	0x6b, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x47, 0x0a, 0x15, 0x43, 0x53, 0x5f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x22,
	0x85, 0x01, 0x0a, 0x15, 0x53, 0x43, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x59, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x4b, 0x0a, 0x0b, 0x42, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x40, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x12,
	0x30, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x42, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x26, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x53, 0x43,
	0x5f, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x0f,
	0x53, 0x43, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x22, 0xab, 0x01, 0x0a,
	0x0c, 0x43, 0x53, 0x5f, 0x43, 0x61, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x0b, 0x6f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x53,
	0x43, 0x5f, 0x43, 0x61, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x33, 0x44, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x12,
	0x34, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0b, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x72, 0x63, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x68, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x43, 0x53, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x75, 0x6e, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x67, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x67, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x6e, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6c,
	0x65, 0x74, 0x4e, 0x75, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x70, 0x4e, 0x75, 0x6d,
	0x22, 0x73, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x75, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x47, 0x75, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x67, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67,
	0x75, 0x6e, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x47, 0x75, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x67, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x75,
	0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x11, 0x0a,
	0x0f, 0x43, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x22, 0x33, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x13, 0x53, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x22, 0x36, 0x0a, 0x1b, 0x53, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0x90, 0x01, 0x0a, 0x08,
	0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42,
	0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x41, 0x64, 0x64, 0x42, 0x75, 0x66, 0x66, 0x12, 0x34, 0x0a, 0x0a,
	0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x42,
	0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x40, 0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x66, 0x66,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x66,
	0x66, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x66,
	0x66, 0x49, 0x64, 0x73, 0x22, 0x61, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x41, 0x64, 0x64, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x33, 0x44, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x44, 0x65,
	0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x53,
	0x43, 0x5f, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x07, 0x53, 0x43, 0x5f, 0x54,
	0x69, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x69, 0x70, 0x22, 0x3c, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x22, 0x33, 0x0a, 0x09, 0x53, 0x43, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65,
	0x78, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x37, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x47,
	0x65, 0x74, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x51, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x78, 0x22, 0x3e, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x53, 0x68, 0x6f, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22,
	0x0d, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x41, 0x0a, 0x14, 0x53, 0x43, 0x5f, 0x4d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x42, 0x6f, 0x6f, 0x73, 0x22, 0x7d, 0x0a, 0x0d, 0x43, 0x53, 0x5f,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x54, 0x0a, 0x11, 0x43,
	0x53, 0x5f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x50, 0x6f, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x22, 0x6e, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x57,
	0x61, 0x6b, 0x65, 0x55, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x22, 0x69, 0x0a, 0x0d, 0x53, 0x43, 0x5f, 0x43, 0x61, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x6f,
	0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x33, 0x44, 0x52, 0x03, 0x6f, 0x72,
	0x69, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x2a, 0x52, 0x0a, 0x08,
	0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x52, 0x4f,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x05,
	0x2a, 0xf8, 0x03, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x48, 0x70, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x74, 0x6b, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x65, 0x66, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x69, 0x74, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x6f, 0x64, 0x67, 0x65, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x72,
	0x69, 0x74, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x6e, 0x74, 0x69, 0x43, 0x72, 0x69, 0x74,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x70, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x74, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x09, 0x12, 0x0c, 0x0a,
	0x08, 0x44, 0x65, 0x66, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x48,
	0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x6f, 0x64,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x72, 0x69,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x6e, 0x74, 0x69,
	0x43, 0x72, 0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x72, 0x69, 0x74, 0x48, 0x75, 0x72, 0x74, 0x10, 0x0f, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f, 0x76,
	0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x69, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x10, 0x12, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x6f, 0x64, 0x67, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x10, 0x14, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x6e, 0x74, 0x69, 0x43, 0x72, 0x69, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x10, 0x16, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x6f,
	0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x17, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x69, 0x67, 0x68, 0x74, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x19, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x68, 0x6f,
	0x74, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x10, 0x1a, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x68, 0x6f, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x1c, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x1d, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x10, 0x1e, 0x12, 0x0e,
	0x0a, 0x0a, 0x45, 0x78, 0x70, 0x55, 0x70, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x1f, 0x12, 0x0a,
	0x0a, 0x06, 0x48, 0x70, 0x42, 0x61, 0x73, 0x65, 0x10, 0x20, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e,
	0x69, 0x74, 0x41, 0x74, 0x74, 0x72, 0x4d, 0x61, 0x78, 0x10, 0x21, 0x2a, 0x93, 0x02, 0x0a, 0x0e,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x48, 0x70, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x48, 0x70,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x41, 0x74, 0x6b, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x41, 0x74, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x06, 0x12, 0x14, 0x0a,
	0x10, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x75, 0x6c,
	0x6c, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x10, 0x08, 0x12, 0x1d, 0x0a,
	0x19, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x69, 0x6c, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x4d, 0x61, 0x78, 0x10,
	0x0b, 0x2a, 0x71, 0x0a, 0x13, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10,
	0x01, 0x12, 0x21, 0x0a, 0x1d, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x4d,
	0x61, 0x78, 0x10, 0x02, 0x2a, 0x69, 0x0a, 0x0c, 0x42, 0x75, 0x66, 0x66, 0x41, 0x74, 0x74, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x75, 0x66, 0x66, 0x50, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x75,
	0x66, 0x66, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42,
	0x75, 0x66, 0x66, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x42, 0x75, 0x66, 0x66, 0x41, 0x64, 0x64, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x75,
	0x66, 0x66, 0x42, 0x75, 0x66, 0x66, 0x41, 0x74, 0x74, 0x72, 0x4d, 0x61, 0x78, 0x10, 0x04, 0x2a,
	0x6b, 0x0a, 0x0c, 0x44, 0x72, 0x6f, 0x70, 0x41, 0x74, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x6e, 0x65,
	0x4d, 0x6f, 0x72, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x01, 0x12,
	0x16, 0x0a, 0x12, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x72, 0x6f, 0x70, 0x42, 0x6f, 0x78, 0x49, 0x64,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70, 0x44,
	0x72, 0x6f, 0x70, 0x41, 0x74, 0x74, 0x72, 0x4d, 0x61, 0x78, 0x10, 0x03, 0x2a, 0xb1, 0x01, 0x0a,
	0x09, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x4c, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x49, 0x5a, 0x5a, 0x59, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x53, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x45, 0x57,
	0x42, 0x45, 0x45, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4d, 0x4d, 0x4f, 0x42, 0x49, 0x4c,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x4d, 0x55, 0x5f, 0x42,
	0x55, 0x46, 0x46, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x32, 0x10, 0x0c,
	0x2a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x6d,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x72, 0x6f, 0x70, 0x10, 0x03, 0x2a, 0x24, 0x0a, 0x0c, 0x44, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x72, 0x69, 0x74, 0x10, 0x01,
	0x2a, 0x46, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x67, 0x65, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x10, 0x03, 0x42, 0x11, 0x5a, 0x0f, 0x61, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x75, 0x74,
}

var (
	file_battle_proto_rawDescOnce sync.Once
	file_battle_proto_rawDescData = file_battle_proto_rawDesc
)

func file_battle_proto_rawDescGZIP() []byte {
	file_battle_proto_rawDescOnce.Do(func() {
		file_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_battle_proto_rawDescData)
	})
	return file_battle_proto_rawDescData
}

var file_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_battle_proto_goTypes = []interface{}{
	(UnitType)(0),                       // 0: am.protocol.UnitType
	(UnitAttrType)(0),                   // 1: am.protocol.UnitAttrType
	(WeaponAttrType)(0),                 // 2: am.protocol.WeaponAttrType
	(WeaponSkillAttrType)(0),            // 3: am.protocol.WeaponSkillAttrType
	(BuffAttrType)(0),                   // 4: am.protocol.BuffAttrType
	(DropAttrType)(0),                   // 5: am.protocol.DropAttrType
	(UnitState)(0),                      // 6: am.protocol.UnitState
	(ItemReason)(0),                     // 7: am.protocol.ItemReason
	(DamageStatus)(0),                   // 8: am.protocol.DamageStatus
	(StagePhase)(0),                     // 9: am.protocol.StagePhase
	(*CS_BattleHeartBeat)(nil),          // 10: am.protocol.CS_BattleHeartBeat
	(*SC_BattleHeartBeat)(nil),          // 11: am.protocol.SC_BattleHeartBeat
	(*CS_EnterStage)(nil),               // 12: am.protocol.CS_EnterStage
	(*SC_EnterStage)(nil),               // 13: am.protocol.SC_EnterStage
	(*CS_BattleLogin)(nil),              // 14: am.protocol.CS_BattleLogin
	(*SC_BattleLogin)(nil),              // 15: am.protocol.SC_BattleLogin
	(*CS_BattleReady)(nil),              // 16: am.protocol.CS_BattleReady
	(*SC_BattleReady)(nil),              // 17: am.protocol.SC_BattleReady
	(*CS_BattleGm)(nil),                 // 18: am.protocol.CS_BattleGm
	(*SC_BattleGm)(nil),                 // 19: am.protocol.SC_BattleGm
	(*Pos3D)(nil),                       // 20: am.protocol.Pos3D
	(*CS_Move)(nil),                     // 21: am.protocol.CS_Move
	(*SC_Move)(nil),                     // 22: am.protocol.SC_Move
	(*DropItemUnit)(nil),                // 23: am.protocol.DropItemUnit
	(*UnitBaseInfo)(nil),                // 24: am.protocol.UnitBaseInfo
	(*SC_AddUnit)(nil),                  // 25: am.protocol.SC_AddUnit
	(*SC_RemoveUnit)(nil),               // 26: am.protocol.SC_RemoveUnit
	(*UnitAttr)(nil),                    // 27: am.protocol.UnitAttr
	(*SC_SyncUnitInfo)(nil),             // 28: am.protocol.SC_SyncUnitInfo
	(*WeaponAttr)(nil),                  // 29: am.protocol.WeaponAttr
	(*SkillAttr)(nil),                   // 30: am.protocol.SkillAttr
	(*DropAttr)(nil),                    // 31: am.protocol.DropAttr
	(*CS_QuickTakeRoom)(nil),            // 32: am.protocol.CS_QuickTakeRoom
	(*SC_QuickTakeRoom)(nil),            // 33: am.protocol.SC_QuickTakeRoom
	(*CS_CollectionResource)(nil),       // 34: am.protocol.CS_CollectionResource
	(*SC_CollectionResource)(nil),       // 35: am.protocol.SC_CollectionResource
	(*SC_StateChange)(nil),              // 36: am.protocol.SC_StateChange
	(*BigMapAward)(nil),                 // 37: am.protocol.BigMapAward
	(*SC_AwardsGet)(nil),                // 38: am.protocol.SC_AwardsGet
	(*SC_MainUnit)(nil),                 // 39: am.protocol.SC_MainUnit
	(*SC_UnitAddItem)(nil),              // 40: am.protocol.SC_UnitAddItem
	(*SC_UnitSyncItem)(nil),             // 41: am.protocol.SC_UnitSyncItem
	(*CS_CastSkill)(nil),                // 42: am.protocol.CS_CastSkill
	(*SC_CastSkill)(nil),                // 43: am.protocol.SC_CastSkill
	(*DamageInfo)(nil),                  // 44: am.protocol.DamageInfo
	(*CS_SyncDamage)(nil),               // 45: am.protocol.CS_SyncDamage
	(*SC_SyncDamage)(nil),               // 46: am.protocol.SC_SyncDamage
	(*CS_ReloadGun)(nil),                // 47: am.protocol.CS_ReloadGun
	(*WeaponInfo)(nil),                  // 48: am.protocol.WeaponInfo
	(*SC_SyncGunInfo)(nil),              // 49: am.protocol.SC_SyncGunInfo
	(*CS_ShiftGun)(nil),                 // 50: am.protocol.CS_ShiftGun
	(*SC_ShiftGun)(nil),                 // 51: am.protocol.SC_ShiftGun
	(*CS_StopMove)(nil),                 // 52: am.protocol.CS_StopMove
	(*CS_StageRestart)(nil),             // 53: am.protocol.CS_StageRestart
	(*SC_StageRestart)(nil),             // 54: am.protocol.SC_StageRestart
	(*SC_StagePhaseTiming)(nil),         // 55: am.protocol.SC_StagePhaseTiming
	(*SC_StageMonsterComingTiming)(nil), // 56: am.protocol.SC_StageMonsterComingTiming
	(*BuffInfo)(nil),                    // 57: am.protocol.BuffInfo
	(*SC_AddBuff)(nil),                  // 58: am.protocol.SC_AddBuff
	(*SC_DelBuff)(nil),                  // 59: am.protocol.SC_DelBuff
	(*SC_AddMagicField)(nil),            // 60: am.protocol.SC_AddMagicField
	(*SC_DelMagicField)(nil),            // 61: am.protocol.SC_DelMagicField
	(*SC_UnitInterruptSkill)(nil),       // 62: am.protocol.SC_UnitInterruptSkill
	(*SC_Tips)(nil),                     // 63: am.protocol.SC_Tips
	(*SC_SyncAllItems)(nil),             // 64: am.protocol.SC_SyncAllItems
	(*SC_GetExp)(nil),                   // 65: am.protocol.SC_GetExp
	(*SC_GetAbility)(nil),               // 66: am.protocol.SC_GetAbility
	(*CS_PickAbility)(nil),              // 67: am.protocol.CS_PickAbility
	(*CS_ShotMove)(nil),                 // 68: am.protocol.CS_ShotMove
	(*Task)(nil),                        // 69: am.protocol.Task
	(*SC_SyncTask)(nil),                 // 70: am.protocol.SC_SyncTask
	(*CS_TaskList)(nil),                 // 71: am.protocol.CS_TaskList
	(*SC_TaskList)(nil),                 // 72: am.protocol.SC_TaskList
	(*SC_MonsterWaveComing)(nil),        // 73: am.protocol.SC_MonsterWaveComing
	(*CS_EnterScene)(nil),               // 74: am.protocol.CS_EnterScene
	(*SC_EnterScene)(nil),               // 75: am.protocol.SC_EnterScene
	(*CS_SkillCastOnPos)(nil),           // 76: am.protocol.CS_SkillCastOnPos
	(*SC_MonsterWakeUp)(nil),            // 77: am.protocol.SC_MonsterWakeUp
	(*SC_CastBullet)(nil),               // 78: am.protocol.SC_CastBullet
}
var file_battle_proto_depIdxs = []int32{
	20, // 0: am.protocol.CS_Move.p:type_name -> am.protocol.Pos3D
	20, // 1: am.protocol.SC_Move.p:type_name -> am.protocol.Pos3D
	20, // 2: am.protocol.SC_Move.p2:type_name -> am.protocol.Pos3D
	20, // 3: am.protocol.UnitBaseInfo.pos:type_name -> am.protocol.Pos3D
	0,  // 4: am.protocol.UnitBaseInfo.type:type_name -> am.protocol.UnitType
	23, // 5: am.protocol.UnitBaseInfo.drop_item:type_name -> am.protocol.DropItemUnit
	24, // 6: am.protocol.SC_AddUnit.info:type_name -> am.protocol.UnitBaseInfo
	1,  // 7: am.protocol.UnitAttr.type:type_name -> am.protocol.UnitAttrType
	24, // 8: am.protocol.SC_SyncUnitInfo.info:type_name -> am.protocol.UnitBaseInfo
	29, // 9: am.protocol.SC_SyncUnitInfo.weapon_attr:type_name -> am.protocol.WeaponAttr
	30, // 10: am.protocol.SC_SyncUnitInfo.skill_attr:type_name -> am.protocol.SkillAttr
	31, // 11: am.protocol.SC_SyncUnitInfo.drop_attr:type_name -> am.protocol.DropAttr
	27, // 12: am.protocol.SC_SyncUnitInfo.useless:type_name -> am.protocol.UnitAttr
	2,  // 13: am.protocol.SC_SyncUnitInfo.useless2:type_name -> am.protocol.WeaponAttrType
	4,  // 14: am.protocol.SC_SyncUnitInfo.useless4:type_name -> am.protocol.BuffAttrType
	3,  // 15: am.protocol.SC_SyncUnitInfo.useless3:type_name -> am.protocol.WeaponSkillAttrType
	5,  // 16: am.protocol.SC_SyncUnitInfo.useless5:type_name -> am.protocol.DropAttrType
	6,  // 17: am.protocol.SC_StateChange.states:type_name -> am.protocol.UnitState
	37, // 18: am.protocol.SC_AwardsGet.awards:type_name -> am.protocol.BigMapAward
	7,  // 19: am.protocol.SC_UnitAddItem.reason:type_name -> am.protocol.ItemReason
	20, // 20: am.protocol.CS_CastSkill.target_pos:type_name -> am.protocol.Pos3D
	20, // 21: am.protocol.CS_CastSkill.orientation:type_name -> am.protocol.Pos3D
	20, // 22: am.protocol.SC_CastSkill.target_pos:type_name -> am.protocol.Pos3D
	20, // 23: am.protocol.SC_CastSkill.orientation:type_name -> am.protocol.Pos3D
	44, // 24: am.protocol.CS_SyncDamage.infos:type_name -> am.protocol.DamageInfo
	44, // 25: am.protocol.SC_SyncDamage.infos:type_name -> am.protocol.DamageInfo
	48, // 26: am.protocol.SC_SyncGunInfo.infos:type_name -> am.protocol.WeaponInfo
	9,  // 27: am.protocol.SC_StagePhaseTiming.current_phase:type_name -> am.protocol.StagePhase
	57, // 28: am.protocol.SC_AddBuff.buff_infos:type_name -> am.protocol.BuffInfo
	20, // 29: am.protocol.SC_AddMagicField.pos:type_name -> am.protocol.Pos3D
	69, // 30: am.protocol.SC_SyncTask.tasks:type_name -> am.protocol.Task
	69, // 31: am.protocol.SC_TaskList.tasks:type_name -> am.protocol.Task
	20, // 32: am.protocol.CS_SkillCastOnPos.pos:type_name -> am.protocol.Pos3D
	20, // 33: am.protocol.SC_MonsterWakeUp.pos:type_name -> am.protocol.Pos3D
	20, // 34: am.protocol.SC_CastBullet.ori:type_name -> am.protocol.Pos3D
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_battle_proto_init() }
func file_battle_proto_init() {
	if File_battle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_battle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_BattleHeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_BattleHeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_EnterStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_EnterStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_BattleLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_BattleLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_BattleReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_BattleReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_BattleGm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_BattleGm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos3D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropItemUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_AddUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_RemoveUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_SyncUnitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_QuickTakeRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_QuickTakeRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_CollectionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_CollectionResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_StateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigMapAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_AwardsGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_MainUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_UnitAddItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_UnitSyncItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_CastSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_CastSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DamageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_SyncDamage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_SyncDamage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_ReloadGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeaponInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_SyncGunInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_ShiftGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_ShiftGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_StopMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_StageRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_StageRestart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_StagePhaseTiming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_StageMonsterComingTiming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_AddBuff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_DelBuff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_AddMagicField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_DelMagicField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_UnitInterruptSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_Tips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_SyncAllItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_GetExp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_GetAbility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_PickAbility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_ShotMove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_SyncTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_MonsterWaveComing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_EnterScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_EnterScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CS_SkillCastOnPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_MonsterWakeUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_CastBullet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battle_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_battle_proto_goTypes,
		DependencyIndexes: file_battle_proto_depIdxs,
		EnumInfos:         file_battle_proto_enumTypes,
		MessageInfos:      file_battle_proto_msgTypes,
	}.Build()
	File_battle_proto = out.File
	file_battle_proto_rawDesc = nil
	file_battle_proto_goTypes = nil
	file_battle_proto_depIdxs = nil
}

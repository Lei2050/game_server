// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: msg_types_cs.proto

package out

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 所有客户端->服务器的消息类型
// (100+模块号)*1000 + 递增号
// 比如下面登陆，登陆模块号为1
// 协议号范围 (100000, 299999]，如果超出这个范围，请报风险
// 注意：在客户端，1**开头的是C#端协议，2**开头的是Lua端协议。
type CSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OneOf:
	//	*CSMessage_CsLogin
	//	*CSMessage_CsCreate
	//	*CSMessage_CsGm
	//	*CSMessage_CsReady
	//	*CSMessage_CsHeroDraw
	//	*CSMessage_CsHeroLevelUp
	//	*CSMessage_CsHeroStarUp
	//	*CSMessage_CsHeroList
	//	*CSMessage_CsBagList
	//	*CSMessage_CsExpandBag
	//	*CSMessage_CsUseSinglepickbox
	//	*CSMessage_CsSaleItem
	//	*CSMessage_CsDraw
	//	*CSMessage_CsDrawReward
	//	*CSMessage_CsRankList
	//	*CSMessage_CsRankLike
	//	*CSMessage_CsMailList
	//	*CSMessage_CsReadMail
	//	*CSMessage_CsReceiveMail
	//	*CSMessage_CsDeleteMail
	//	*CSMessage_CsGetShop
	//	*CSMessage_CsShopBuy
	//	*CSMessage_CsShopRefresh
	//	*CSMessage_CsTowerFight
	//	*CSMessage_CsTowerLike
	//	*CSMessage_CsGuildCreate
	//	*CSMessage_CsGuildDismiss
	//	*CSMessage_CsGuildApplyJoin
	//	*CSMessage_CsGuildApplyCheck
	//	*CSMessage_CsGuildLeave
	//	*CSMessage_CsGuildKick
	//	*CSMessage_CsGuildMessage
	//	*CSMessage_CsGetGuildlist
	//	*CSMessage_CsGetFriendlist
	//	*CSMessage_CsFriendRecommend
	//	*CSMessage_CsFriendSearch
	//	*CSMessage_CsFriendApply
	//	*CSMessage_CsFriendApplyHandle
	//	*CSMessage_CsAddBlacklist
	//	*CSMessage_CsBattleHeartBeat
	//	*CSMessage_CsEnterStage
	//	*CSMessage_CsBattleLogin
	//	*CSMessage_CsBattleReady
	//	*CSMessage_CsBattleGm
	//	*CSMessage_CsMove
	//	*CSMessage_CsQuickTakeRoom
	//	*CSMessage_CsCollectionResource
	//	*CSMessage_CsCastSkill
	//	*CSMessage_CsSyncDamage
	//	*CSMessage_CsReloadGun
	//	*CSMessage_CsShiftGun
	//	*CSMessage_CsStopMove
	//	*CSMessage_CsStageRestart
	//	*CSMessage_CsPickAbility
	//	*CSMessage_CsTaskList
	//	*CSMessage_CsShotMove
	//	*CSMessage_CsEnterScene
	//	*CSMessage_CsSkillCastOnPos
	OneOf isCSMessage_OneOf `protobuf_oneof:"one_of"`
}

func (x *CSMessage) Reset() {
	*x = CSMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_types_cs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSMessage) ProtoMessage() {}

func (x *CSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_types_cs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSMessage.ProtoReflect.Descriptor instead.
func (*CSMessage) Descriptor() ([]byte, []int) {
	return file_msg_types_cs_proto_rawDescGZIP(), []int{0}
}

func (m *CSMessage) GetOneOf() isCSMessage_OneOf {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (x *CSMessage) GetCsLogin() *CS_Login {
	if x, ok := x.GetOneOf().(*CSMessage_CsLogin); ok {
		return x.CsLogin
	}
	return nil
}

func (x *CSMessage) GetCsCreate() *CS_Create {
	if x, ok := x.GetOneOf().(*CSMessage_CsCreate); ok {
		return x.CsCreate
	}
	return nil
}

func (x *CSMessage) GetCsGm() *CS_Gm {
	if x, ok := x.GetOneOf().(*CSMessage_CsGm); ok {
		return x.CsGm
	}
	return nil
}

func (x *CSMessage) GetCsReady() *CS_Ready {
	if x, ok := x.GetOneOf().(*CSMessage_CsReady); ok {
		return x.CsReady
	}
	return nil
}

func (x *CSMessage) GetCsHeroDraw() *CS_HeroDraw {
	if x, ok := x.GetOneOf().(*CSMessage_CsHeroDraw); ok {
		return x.CsHeroDraw
	}
	return nil
}

func (x *CSMessage) GetCsHeroLevelUp() *CS_HeroLevelUp {
	if x, ok := x.GetOneOf().(*CSMessage_CsHeroLevelUp); ok {
		return x.CsHeroLevelUp
	}
	return nil
}

func (x *CSMessage) GetCsHeroStarUp() *CS_HeroStarUp {
	if x, ok := x.GetOneOf().(*CSMessage_CsHeroStarUp); ok {
		return x.CsHeroStarUp
	}
	return nil
}

func (x *CSMessage) GetCsHeroList() *CS_HeroList {
	if x, ok := x.GetOneOf().(*CSMessage_CsHeroList); ok {
		return x.CsHeroList
	}
	return nil
}

func (x *CSMessage) GetCsBagList() *CS_BagList {
	if x, ok := x.GetOneOf().(*CSMessage_CsBagList); ok {
		return x.CsBagList
	}
	return nil
}

func (x *CSMessage) GetCsExpandBag() *CS_ExpandBag {
	if x, ok := x.GetOneOf().(*CSMessage_CsExpandBag); ok {
		return x.CsExpandBag
	}
	return nil
}

func (x *CSMessage) GetCsUseSinglepickbox() *CS_UseSinglePickBox {
	if x, ok := x.GetOneOf().(*CSMessage_CsUseSinglepickbox); ok {
		return x.CsUseSinglepickbox
	}
	return nil
}

func (x *CSMessage) GetCsSaleItem() *CS_SaleItem {
	if x, ok := x.GetOneOf().(*CSMessage_CsSaleItem); ok {
		return x.CsSaleItem
	}
	return nil
}

func (x *CSMessage) GetCsDraw() *CS_Draw {
	if x, ok := x.GetOneOf().(*CSMessage_CsDraw); ok {
		return x.CsDraw
	}
	return nil
}

func (x *CSMessage) GetCsDrawReward() *CS_DrawReward {
	if x, ok := x.GetOneOf().(*CSMessage_CsDrawReward); ok {
		return x.CsDrawReward
	}
	return nil
}

func (x *CSMessage) GetCsRankList() *CS_GetRankList {
	if x, ok := x.GetOneOf().(*CSMessage_CsRankList); ok {
		return x.CsRankList
	}
	return nil
}

func (x *CSMessage) GetCsRankLike() *CS_RankLike {
	if x, ok := x.GetOneOf().(*CSMessage_CsRankLike); ok {
		return x.CsRankLike
	}
	return nil
}

func (x *CSMessage) GetCsMailList() *CS_GetMailList {
	if x, ok := x.GetOneOf().(*CSMessage_CsMailList); ok {
		return x.CsMailList
	}
	return nil
}

func (x *CSMessage) GetCsReadMail() *CS_ReadMail {
	if x, ok := x.GetOneOf().(*CSMessage_CsReadMail); ok {
		return x.CsReadMail
	}
	return nil
}

func (x *CSMessage) GetCsReceiveMail() *CS_ReceiveMail {
	if x, ok := x.GetOneOf().(*CSMessage_CsReceiveMail); ok {
		return x.CsReceiveMail
	}
	return nil
}

func (x *CSMessage) GetCsDeleteMail() *CS_DeleteMail {
	if x, ok := x.GetOneOf().(*CSMessage_CsDeleteMail); ok {
		return x.CsDeleteMail
	}
	return nil
}

func (x *CSMessage) GetCsGetShop() *CS_GetShop {
	if x, ok := x.GetOneOf().(*CSMessage_CsGetShop); ok {
		return x.CsGetShop
	}
	return nil
}

func (x *CSMessage) GetCsShopBuy() *CS_ShopBuy {
	if x, ok := x.GetOneOf().(*CSMessage_CsShopBuy); ok {
		return x.CsShopBuy
	}
	return nil
}

func (x *CSMessage) GetCsShopRefresh() *CS_RefreshShop {
	if x, ok := x.GetOneOf().(*CSMessage_CsShopRefresh); ok {
		return x.CsShopRefresh
	}
	return nil
}

func (x *CSMessage) GetCsTowerFight() *CS_TowerFight {
	if x, ok := x.GetOneOf().(*CSMessage_CsTowerFight); ok {
		return x.CsTowerFight
	}
	return nil
}

func (x *CSMessage) GetCsTowerLike() *CS_TowerLike {
	if x, ok := x.GetOneOf().(*CSMessage_CsTowerLike); ok {
		return x.CsTowerLike
	}
	return nil
}

func (x *CSMessage) GetCsGuildCreate() *CS_GuildCreate {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildCreate); ok {
		return x.CsGuildCreate
	}
	return nil
}

func (x *CSMessage) GetCsGuildDismiss() *CS_GuildDismiss {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildDismiss); ok {
		return x.CsGuildDismiss
	}
	return nil
}

func (x *CSMessage) GetCsGuildApplyJoin() *CS_GuildApplyJoin {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildApplyJoin); ok {
		return x.CsGuildApplyJoin
	}
	return nil
}

func (x *CSMessage) GetCsGuildApplyCheck() *CS_GuildApplyCheck {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildApplyCheck); ok {
		return x.CsGuildApplyCheck
	}
	return nil
}

func (x *CSMessage) GetCsGuildLeave() *CS_GuildLeave {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildLeave); ok {
		return x.CsGuildLeave
	}
	return nil
}

func (x *CSMessage) GetCsGuildKick() *CS_GuildKick {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildKick); ok {
		return x.CsGuildKick
	}
	return nil
}

func (x *CSMessage) GetCsGuildMessage() *CS_GuildMessage {
	if x, ok := x.GetOneOf().(*CSMessage_CsGuildMessage); ok {
		return x.CsGuildMessage
	}
	return nil
}

func (x *CSMessage) GetCsGetGuildlist() *CS_GetGuildList {
	if x, ok := x.GetOneOf().(*CSMessage_CsGetGuildlist); ok {
		return x.CsGetGuildlist
	}
	return nil
}

func (x *CSMessage) GetCsGetFriendlist() *CS_GetFriendList {
	if x, ok := x.GetOneOf().(*CSMessage_CsGetFriendlist); ok {
		return x.CsGetFriendlist
	}
	return nil
}

func (x *CSMessage) GetCsFriendRecommend() *CS_FriendRecommend {
	if x, ok := x.GetOneOf().(*CSMessage_CsFriendRecommend); ok {
		return x.CsFriendRecommend
	}
	return nil
}

func (x *CSMessage) GetCsFriendSearch() *CS_FriendSearch {
	if x, ok := x.GetOneOf().(*CSMessage_CsFriendSearch); ok {
		return x.CsFriendSearch
	}
	return nil
}

func (x *CSMessage) GetCsFriendApply() *CS_FriendApply {
	if x, ok := x.GetOneOf().(*CSMessage_CsFriendApply); ok {
		return x.CsFriendApply
	}
	return nil
}

func (x *CSMessage) GetCsFriendApplyHandle() *CS_FriendApplyHandle {
	if x, ok := x.GetOneOf().(*CSMessage_CsFriendApplyHandle); ok {
		return x.CsFriendApplyHandle
	}
	return nil
}

func (x *CSMessage) GetCsAddBlacklist() *CS_AddBalckList {
	if x, ok := x.GetOneOf().(*CSMessage_CsAddBlacklist); ok {
		return x.CsAddBlacklist
	}
	return nil
}

func (x *CSMessage) GetCsBattleHeartBeat() *CS_BattleHeartBeat {
	if x, ok := x.GetOneOf().(*CSMessage_CsBattleHeartBeat); ok {
		return x.CsBattleHeartBeat
	}
	return nil
}

func (x *CSMessage) GetCsEnterStage() *CS_EnterStage {
	if x, ok := x.GetOneOf().(*CSMessage_CsEnterStage); ok {
		return x.CsEnterStage
	}
	return nil
}

func (x *CSMessage) GetCsBattleLogin() *CS_BattleLogin {
	if x, ok := x.GetOneOf().(*CSMessage_CsBattleLogin); ok {
		return x.CsBattleLogin
	}
	return nil
}

func (x *CSMessage) GetCsBattleReady() *CS_BattleReady {
	if x, ok := x.GetOneOf().(*CSMessage_CsBattleReady); ok {
		return x.CsBattleReady
	}
	return nil
}

func (x *CSMessage) GetCsBattleGm() *CS_BattleGm {
	if x, ok := x.GetOneOf().(*CSMessage_CsBattleGm); ok {
		return x.CsBattleGm
	}
	return nil
}

func (x *CSMessage) GetCsMove() *CS_Move {
	if x, ok := x.GetOneOf().(*CSMessage_CsMove); ok {
		return x.CsMove
	}
	return nil
}

func (x *CSMessage) GetCsQuickTakeRoom() *CS_QuickTakeRoom {
	if x, ok := x.GetOneOf().(*CSMessage_CsQuickTakeRoom); ok {
		return x.CsQuickTakeRoom
	}
	return nil
}

func (x *CSMessage) GetCsCollectionResource() *CS_CollectionResource {
	if x, ok := x.GetOneOf().(*CSMessage_CsCollectionResource); ok {
		return x.CsCollectionResource
	}
	return nil
}

func (x *CSMessage) GetCsCastSkill() *CS_CastSkill {
	if x, ok := x.GetOneOf().(*CSMessage_CsCastSkill); ok {
		return x.CsCastSkill
	}
	return nil
}

func (x *CSMessage) GetCsSyncDamage() *CS_SyncDamage {
	if x, ok := x.GetOneOf().(*CSMessage_CsSyncDamage); ok {
		return x.CsSyncDamage
	}
	return nil
}

func (x *CSMessage) GetCsReloadGun() *CS_ReloadGun {
	if x, ok := x.GetOneOf().(*CSMessage_CsReloadGun); ok {
		return x.CsReloadGun
	}
	return nil
}

func (x *CSMessage) GetCsShiftGun() *CS_ShiftGun {
	if x, ok := x.GetOneOf().(*CSMessage_CsShiftGun); ok {
		return x.CsShiftGun
	}
	return nil
}

func (x *CSMessage) GetCsStopMove() *CS_StopMove {
	if x, ok := x.GetOneOf().(*CSMessage_CsStopMove); ok {
		return x.CsStopMove
	}
	return nil
}

func (x *CSMessage) GetCsStageRestart() *CS_StageRestart {
	if x, ok := x.GetOneOf().(*CSMessage_CsStageRestart); ok {
		return x.CsStageRestart
	}
	return nil
}

func (x *CSMessage) GetCsPickAbility() *CS_PickAbility {
	if x, ok := x.GetOneOf().(*CSMessage_CsPickAbility); ok {
		return x.CsPickAbility
	}
	return nil
}

func (x *CSMessage) GetCsTaskList() *CS_TaskList {
	if x, ok := x.GetOneOf().(*CSMessage_CsTaskList); ok {
		return x.CsTaskList
	}
	return nil
}

func (x *CSMessage) GetCsShotMove() *CS_ShotMove {
	if x, ok := x.GetOneOf().(*CSMessage_CsShotMove); ok {
		return x.CsShotMove
	}
	return nil
}

func (x *CSMessage) GetCsEnterScene() *CS_EnterScene {
	if x, ok := x.GetOneOf().(*CSMessage_CsEnterScene); ok {
		return x.CsEnterScene
	}
	return nil
}

func (x *CSMessage) GetCsSkillCastOnPos() *CS_SkillCastOnPos {
	if x, ok := x.GetOneOf().(*CSMessage_CsSkillCastOnPos); ok {
		return x.CsSkillCastOnPos
	}
	return nil
}

type isCSMessage_OneOf interface {
	isCSMessage_OneOf()
}

type CSMessage_CsLogin struct {
	//登陆相关 101
	CsLogin *CS_Login `protobuf:"bytes,101001,opt,name=cs_login,json=csLogin,oneof"`
}

type CSMessage_CsCreate struct {
	CsCreate *CS_Create `protobuf:"bytes,101002,opt,name=cs_create,json=csCreate,oneof"`
}

type CSMessage_CsGm struct {
	CsGm *CS_Gm `protobuf:"bytes,101004,opt,name=cs_gm,json=csGm,oneof"`
}

type CSMessage_CsReady struct {
	CsReady *CS_Ready `protobuf:"bytes,101005,opt,name=cs_ready,json=csReady,oneof"`
}

type CSMessage_CsHeroDraw struct {
	//角色系统 102
	CsHeroDraw *CS_HeroDraw `protobuf:"bytes,102001,opt,name=cs_hero_draw,json=csHeroDraw,oneof"`
}

type CSMessage_CsHeroLevelUp struct {
	CsHeroLevelUp *CS_HeroLevelUp `protobuf:"bytes,102002,opt,name=cs_hero_level_up,json=csHeroLevelUp,oneof"`
}

type CSMessage_CsHeroStarUp struct {
	CsHeroStarUp *CS_HeroStarUp `protobuf:"bytes,102003,opt,name=cs_hero_star_up,json=csHeroStarUp,oneof"`
}

type CSMessage_CsHeroList struct {
	CsHeroList *CS_HeroList `protobuf:"bytes,102004,opt,name=cs_hero_list,json=csHeroList,oneof"`
}

type CSMessage_CsBagList struct {
	//背包道具相关 103
	CsBagList *CS_BagList `protobuf:"bytes,103001,opt,name=cs_bag_list,json=csBagList,oneof"`
}

type CSMessage_CsExpandBag struct {
	CsExpandBag *CS_ExpandBag `protobuf:"bytes,103002,opt,name=cs_expand_bag,json=csExpandBag,oneof"`
}

type CSMessage_CsUseSinglepickbox struct {
	CsUseSinglepickbox *CS_UseSinglePickBox `protobuf:"bytes,103003,opt,name=cs_use_singlepickbox,json=csUseSinglepickbox,oneof"`
}

type CSMessage_CsSaleItem struct {
	CsSaleItem *CS_SaleItem `protobuf:"bytes,103004,opt,name=cs_sale_item,json=csSaleItem,oneof"`
}

type CSMessage_CsDraw struct {
	//抽卡系统 104
	CsDraw *CS_Draw `protobuf:"bytes,104001,opt,name=cs_draw,json=csDraw,oneof"`
}

type CSMessage_CsDrawReward struct {
	CsDrawReward *CS_DrawReward `protobuf:"bytes,104002,opt,name=cs_draw_reward,json=csDrawReward,oneof"`
}

type CSMessage_CsRankList struct {
	//排行榜系统 105
	CsRankList *CS_GetRankList `protobuf:"bytes,105001,opt,name=cs_rank_list,json=csRankList,oneof"`
}

type CSMessage_CsRankLike struct {
	CsRankLike *CS_RankLike `protobuf:"bytes,105002,opt,name=cs_rank_like,json=csRankLike,oneof"`
}

type CSMessage_CsMailList struct {
	//邮件系统 106
	CsMailList *CS_GetMailList `protobuf:"bytes,106001,opt,name=cs_mail_list,json=csMailList,oneof"`
}

type CSMessage_CsReadMail struct {
	CsReadMail *CS_ReadMail `protobuf:"bytes,106002,opt,name=cs_read_mail,json=csReadMail,oneof"`
}

type CSMessage_CsReceiveMail struct {
	CsReceiveMail *CS_ReceiveMail `protobuf:"bytes,106003,opt,name=cs_receive_mail,json=csReceiveMail,oneof"`
}

type CSMessage_CsDeleteMail struct {
	CsDeleteMail *CS_DeleteMail `protobuf:"bytes,106004,opt,name=cs_delete_mail,json=csDeleteMail,oneof"`
}

type CSMessage_CsGetShop struct {
	//商店系统 107
	CsGetShop *CS_GetShop `protobuf:"bytes,107001,opt,name=cs_get_shop,json=csGetShop,oneof"`
}

type CSMessage_CsShopBuy struct {
	CsShopBuy *CS_ShopBuy `protobuf:"bytes,107002,opt,name=cs_shop_buy,json=csShopBuy,oneof"`
}

type CSMessage_CsShopRefresh struct {
	CsShopRefresh *CS_RefreshShop `protobuf:"bytes,107003,opt,name=cs_shop_refresh,json=csShopRefresh,oneof"`
}

type CSMessage_CsTowerFight struct {
	//爬塔系统 108
	CsTowerFight *CS_TowerFight `protobuf:"bytes,108001,opt,name=cs_tower_fight,json=csTowerFight,oneof"`
}

type CSMessage_CsTowerLike struct {
	CsTowerLike *CS_TowerLike `protobuf:"bytes,108002,opt,name=cs_tower_like,json=csTowerLike,oneof"`
}

type CSMessage_CsGuildCreate struct {
	//公会系统 109
	CsGuildCreate *CS_GuildCreate `protobuf:"bytes,109001,opt,name=cs_guild_create,json=csGuildCreate,oneof"`
}

type CSMessage_CsGuildDismiss struct {
	CsGuildDismiss *CS_GuildDismiss `protobuf:"bytes,109002,opt,name=cs_guild_dismiss,json=csGuildDismiss,oneof"`
}

type CSMessage_CsGuildApplyJoin struct {
	CsGuildApplyJoin *CS_GuildApplyJoin `protobuf:"bytes,109003,opt,name=cs_guild_apply_join,json=csGuildApplyJoin,oneof"`
}

type CSMessage_CsGuildApplyCheck struct {
	CsGuildApplyCheck *CS_GuildApplyCheck `protobuf:"bytes,109004,opt,name=cs_guild_apply_check,json=csGuildApplyCheck,oneof"`
}

type CSMessage_CsGuildLeave struct {
	CsGuildLeave *CS_GuildLeave `protobuf:"bytes,109005,opt,name=cs_guild_leave,json=csGuildLeave,oneof"`
}

type CSMessage_CsGuildKick struct {
	CsGuildKick *CS_GuildKick `protobuf:"bytes,109006,opt,name=cs_guild_kick,json=csGuildKick,oneof"`
}

type CSMessage_CsGuildMessage struct {
	CsGuildMessage *CS_GuildMessage `protobuf:"bytes,109007,opt,name=cs_guild_message,json=csGuildMessage,oneof"`
}

type CSMessage_CsGetGuildlist struct {
	CsGetGuildlist *CS_GetGuildList `protobuf:"bytes,109008,opt,name=cs_get_guildlist,json=csGetGuildlist,oneof"`
}

type CSMessage_CsGetFriendlist struct {
	//好友系统 110
	CsGetFriendlist *CS_GetFriendList `protobuf:"bytes,110001,opt,name=cs_get_friendlist,json=csGetFriendlist,oneof"`
}

type CSMessage_CsFriendRecommend struct {
	CsFriendRecommend *CS_FriendRecommend `protobuf:"bytes,110002,opt,name=cs_friend_recommend,json=csFriendRecommend,oneof"`
}

type CSMessage_CsFriendSearch struct {
	CsFriendSearch *CS_FriendSearch `protobuf:"bytes,110003,opt,name=cs_friend_search,json=csFriendSearch,oneof"`
}

type CSMessage_CsFriendApply struct {
	CsFriendApply *CS_FriendApply `protobuf:"bytes,110004,opt,name=cs_friend_apply,json=csFriendApply,oneof"`
}

type CSMessage_CsFriendApplyHandle struct {
	CsFriendApplyHandle *CS_FriendApplyHandle `protobuf:"bytes,110005,opt,name=cs_friend_apply_handle,json=csFriendApplyHandle,oneof"`
}

type CSMessage_CsAddBlacklist struct {
	CsAddBlacklist *CS_AddBalckList `protobuf:"bytes,110006,opt,name=cs_add_blacklist,json=csAddBlacklist,oneof"`
}

type CSMessage_CsBattleHeartBeat struct {
	//战斗系统
	CsBattleHeartBeat *CS_BattleHeartBeat `protobuf:"bytes,150000,opt,name=cs_battle_heart_beat,json=csBattleHeartBeat,oneof"`
}

type CSMessage_CsEnterStage struct {
	CsEnterStage *CS_EnterStage `protobuf:"bytes,150001,opt,name=cs_enter_stage,json=csEnterStage,oneof"`
}

type CSMessage_CsBattleLogin struct {
	CsBattleLogin *CS_BattleLogin `protobuf:"bytes,150002,opt,name=cs_battle_login,json=csBattleLogin,oneof"`
}

type CSMessage_CsBattleReady struct {
	CsBattleReady *CS_BattleReady `protobuf:"bytes,150003,opt,name=cs_battle_ready,json=csBattleReady,oneof"`
}

type CSMessage_CsBattleGm struct {
	CsBattleGm *CS_BattleGm `protobuf:"bytes,150004,opt,name=cs_battle_gm,json=csBattleGm,oneof"`
}

type CSMessage_CsMove struct {
	CsMove *CS_Move `protobuf:"bytes,150005,opt,name=cs_move,json=csMove,oneof"`
}

type CSMessage_CsQuickTakeRoom struct {
	CsQuickTakeRoom *CS_QuickTakeRoom `protobuf:"bytes,150009,opt,name=cs_quick_take_room,json=csQuickTakeRoom,oneof"`
}

type CSMessage_CsCollectionResource struct {
	CsCollectionResource *CS_CollectionResource `protobuf:"bytes,150010,opt,name=cs_collection_resource,json=csCollectionResource,oneof"`
}

type CSMessage_CsCastSkill struct {
	CsCastSkill *CS_CastSkill `protobuf:"bytes,150016,opt,name=cs_cast_skill,json=csCastSkill,oneof"`
}

type CSMessage_CsSyncDamage struct {
	CsSyncDamage *CS_SyncDamage `protobuf:"bytes,150017,opt,name=cs_sync_damage,json=csSyncDamage,oneof"`
}

type CSMessage_CsReloadGun struct {
	CsReloadGun *CS_ReloadGun `protobuf:"bytes,150018,opt,name=cs_reload_gun,json=csReloadGun,oneof"`
}

type CSMessage_CsShiftGun struct {
	CsShiftGun *CS_ShiftGun `protobuf:"bytes,150020,opt,name=cs_shift_gun,json=csShiftGun,oneof"`
}

type CSMessage_CsStopMove struct {
	CsStopMove *CS_StopMove `protobuf:"bytes,150021,opt,name=cs_stop_move,json=csStopMove,oneof"`
}

type CSMessage_CsStageRestart struct {
	CsStageRestart *CS_StageRestart `protobuf:"bytes,150022,opt,name=cs_stage_restart,json=csStageRestart,oneof"`
}

type CSMessage_CsPickAbility struct {
	CsPickAbility *CS_PickAbility `protobuf:"bytes,150035,opt,name=cs_pick_ability,json=csPickAbility,oneof"`
}

type CSMessage_CsTaskList struct {
	CsTaskList *CS_TaskList `protobuf:"bytes,150036,opt,name=cs_task_list,json=csTaskList,oneof"`
}

type CSMessage_CsShotMove struct {
	CsShotMove *CS_ShotMove `protobuf:"bytes,150038,opt,name=cs_shot_move,json=csShotMove,oneof"`
}

type CSMessage_CsEnterScene struct {
	CsEnterScene *CS_EnterScene `protobuf:"bytes,150040,opt,name=cs_enter_scene,json=csEnterScene,oneof"`
}

type CSMessage_CsSkillCastOnPos struct {
	CsSkillCastOnPos *CS_SkillCastOnPos `protobuf:"bytes,150041,opt,name=cs_skill_cast_on_pos,json=csSkillCastOnPos,oneof"`
}

func (*CSMessage_CsLogin) isCSMessage_OneOf() {}

func (*CSMessage_CsCreate) isCSMessage_OneOf() {}

func (*CSMessage_CsGm) isCSMessage_OneOf() {}

func (*CSMessage_CsReady) isCSMessage_OneOf() {}

func (*CSMessage_CsHeroDraw) isCSMessage_OneOf() {}

func (*CSMessage_CsHeroLevelUp) isCSMessage_OneOf() {}

func (*CSMessage_CsHeroStarUp) isCSMessage_OneOf() {}

func (*CSMessage_CsHeroList) isCSMessage_OneOf() {}

func (*CSMessage_CsBagList) isCSMessage_OneOf() {}

func (*CSMessage_CsExpandBag) isCSMessage_OneOf() {}

func (*CSMessage_CsUseSinglepickbox) isCSMessage_OneOf() {}

func (*CSMessage_CsSaleItem) isCSMessage_OneOf() {}

func (*CSMessage_CsDraw) isCSMessage_OneOf() {}

func (*CSMessage_CsDrawReward) isCSMessage_OneOf() {}

func (*CSMessage_CsRankList) isCSMessage_OneOf() {}

func (*CSMessage_CsRankLike) isCSMessage_OneOf() {}

func (*CSMessage_CsMailList) isCSMessage_OneOf() {}

func (*CSMessage_CsReadMail) isCSMessage_OneOf() {}

func (*CSMessage_CsReceiveMail) isCSMessage_OneOf() {}

func (*CSMessage_CsDeleteMail) isCSMessage_OneOf() {}

func (*CSMessage_CsGetShop) isCSMessage_OneOf() {}

func (*CSMessage_CsShopBuy) isCSMessage_OneOf() {}

func (*CSMessage_CsShopRefresh) isCSMessage_OneOf() {}

func (*CSMessage_CsTowerFight) isCSMessage_OneOf() {}

func (*CSMessage_CsTowerLike) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildCreate) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildDismiss) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildApplyJoin) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildApplyCheck) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildLeave) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildKick) isCSMessage_OneOf() {}

func (*CSMessage_CsGuildMessage) isCSMessage_OneOf() {}

func (*CSMessage_CsGetGuildlist) isCSMessage_OneOf() {}

func (*CSMessage_CsGetFriendlist) isCSMessage_OneOf() {}

func (*CSMessage_CsFriendRecommend) isCSMessage_OneOf() {}

func (*CSMessage_CsFriendSearch) isCSMessage_OneOf() {}

func (*CSMessage_CsFriendApply) isCSMessage_OneOf() {}

func (*CSMessage_CsFriendApplyHandle) isCSMessage_OneOf() {}

func (*CSMessage_CsAddBlacklist) isCSMessage_OneOf() {}

func (*CSMessage_CsBattleHeartBeat) isCSMessage_OneOf() {}

func (*CSMessage_CsEnterStage) isCSMessage_OneOf() {}

func (*CSMessage_CsBattleLogin) isCSMessage_OneOf() {}

func (*CSMessage_CsBattleReady) isCSMessage_OneOf() {}

func (*CSMessage_CsBattleGm) isCSMessage_OneOf() {}

func (*CSMessage_CsMove) isCSMessage_OneOf() {}

func (*CSMessage_CsQuickTakeRoom) isCSMessage_OneOf() {}

func (*CSMessage_CsCollectionResource) isCSMessage_OneOf() {}

func (*CSMessage_CsCastSkill) isCSMessage_OneOf() {}

func (*CSMessage_CsSyncDamage) isCSMessage_OneOf() {}

func (*CSMessage_CsReloadGun) isCSMessage_OneOf() {}

func (*CSMessage_CsShiftGun) isCSMessage_OneOf() {}

func (*CSMessage_CsStopMove) isCSMessage_OneOf() {}

func (*CSMessage_CsStageRestart) isCSMessage_OneOf() {}

func (*CSMessage_CsPickAbility) isCSMessage_OneOf() {}

func (*CSMessage_CsTaskList) isCSMessage_OneOf() {}

func (*CSMessage_CsShotMove) isCSMessage_OneOf() {}

func (*CSMessage_CsEnterScene) isCSMessage_OneOf() {}

func (*CSMessage_CsSkillCastOnPos) isCSMessage_OneOf() {}

var File_msg_types_cs_proto protoreflect.FileDescriptor

var file_msg_types_cs_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x1a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x68, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x62, 0x61, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x1f, 0x0a, 0x09,
	0x43, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x73, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x89, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x63, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x37, 0x0a, 0x09, 0x63, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x8a, 0x95, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x63, 0x73, 0x5f, 0x67,
	0x6d, 0x18, 0x8c, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x6d, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x73, 0x47, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x8d, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x63,
	0x73, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0xf1, 0x9c, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x44, 0x72, 0x61, 0x77, 0x48, 0x00, 0x52,
	0x0a, 0x63, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x44, 0x72, 0x61, 0x77, 0x12, 0x48, 0x0a, 0x10, 0x63,
	0x73, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x18,
	0xf2, 0x9c, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x55, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x55, 0x70, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x73, 0x5f, 0x68, 0x65, 0x72, 0x6f,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x70, 0x18, 0xf3, 0x9c, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x53, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x55, 0x70, 0x48, 0x00, 0x52, 0x0c,
	0x63, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x55, 0x70, 0x12, 0x3e, 0x0a, 0x0c,
	0x63, 0x73, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xf4, 0x9c, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x63, 0x73, 0x5f, 0x62, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xd9, 0xa4, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x42, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x73, 0x42, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x73, 0x5f,
	0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x67, 0x18, 0xda, 0xa4, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x53, 0x5f, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x67, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x73, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x67, 0x12, 0x56, 0x0a, 0x14,
	0x63, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x70, 0x69, 0x63,
	0x6b, 0x62, 0x6f, 0x78, 0x18, 0xdb, 0xa4, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x55, 0x73,
	0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x42, 0x6f, 0x78, 0x48, 0x00,
	0x52, 0x12, 0x63, 0x73, 0x55, 0x73, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x70, 0x69, 0x63,
	0x6b, 0x62, 0x6f, 0x78, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0xdc, 0xa4, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x61,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x53, 0x61, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18,
	0xc1, 0xac, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x44, 0x72, 0x61, 0x77, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x73, 0x44, 0x72, 0x61, 0x77, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x73, 0x5f, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0xc2, 0xac, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x53, 0x5f, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x73, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x41, 0x0a,
	0x0c, 0x63, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xa9, 0xb4,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0xaa, 0xb4, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69,
	0x6b, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x6b, 0x65,
	0x12, 0x41, 0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x91, 0xbc, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x4d, 0x61, 0x69, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x92, 0xbc, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x61, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x93, 0xbc, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x63,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0e,
	0x63, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x94,
	0xbc, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x68, 0x6f,
	0x70, 0x18, 0xf9, 0xc3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x6f, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x73, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12,
	0x3b, 0x0a, 0x0b, 0x63, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x62, 0x75, 0x79, 0x18, 0xfa,
	0xc3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x12, 0x47, 0x0a, 0x0f,
	0x63, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18,
	0xfb, 0xc3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x68, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x73, 0x5f, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0xe1, 0xcb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53,
	0x5f, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63,
	0x73, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x63,
	0x73, 0x5f, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0xe2, 0xcb, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x73, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x47,
	0x0a, 0x0f, 0x63, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0xc9, 0xd3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x18, 0xca, 0xd3, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x13, 0x63, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0xcb, 0xd3, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x54, 0x0a, 0x14, 0x63, 0x73, 0x5f, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0xcc,
	0xd3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x11, 0x63, 0x73, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x0e,
	0x63, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0xcd,
	0xd3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6b,
	0x69, 0x63, 0x6b, 0x18, 0xce, 0xd3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xcf, 0xd3, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x53, 0x5f, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x63, 0x73, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xd0, 0xd3, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x73, 0x47, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a,
	0x11, 0x63, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0xb1, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x73, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x13,
	0x63, 0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x18, 0xb2, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x11,
	0x63, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0xb3, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x47, 0x0a,
	0x0f, 0x63, 0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x18, 0xb4, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x5a, 0x0a, 0x16, 0x63, 0x73, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0xb5, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63,
	0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xb6, 0xdb, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f,
	0x41, 0x64, 0x64, 0x42, 0x61, 0x6c, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x73, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x54,
	0x0a, 0x14, 0x63, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x18, 0xf0, 0x93, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x63, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0xf1, 0x93, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x73,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x73,
	0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0xf2, 0x93,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0xf3, 0x93, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x63,
	0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x3e, 0x0a, 0x0c,
	0x63, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x6d, 0x18, 0xf4, 0x93, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x6d, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x6d, 0x12, 0x31, 0x0a, 0x07,
	0x63, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0xf5, 0x93, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53,
	0x5f, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x73, 0x4d, 0x6f, 0x76, 0x65, 0x12,
	0x4e, 0x0a, 0x12, 0x63, 0x73, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x61, 0x6b, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0xf9, 0x93, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x51,
	0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x54, 0x61, 0x6b, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x5c, 0x0a, 0x16, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0xfa, 0x93, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x53, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x14, 0x63, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x0d, 0x63, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x80,
	0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x43, 0x61, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x73, 0x43, 0x61, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x12, 0x44, 0x0a, 0x0e, 0x63, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x81, 0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x79, 0x6e, 0x63,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x73, 0x53, 0x79, 0x6e, 0x63,
	0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x67, 0x75, 0x6e, 0x18, 0x82, 0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53,
	0x5f, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x73,
	0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x73, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x75, 0x6e, 0x18, 0x84, 0x94, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x53, 0x5f, 0x53, 0x68, 0x69, 0x66, 0x74, 0x47, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x73, 0x53, 0x68, 0x69, 0x66, 0x74, 0x47, 0x75, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x73, 0x5f,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x85, 0x94, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x53, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x73, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x86, 0x94,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x73, 0x5f, 0x70, 0x69, 0x63, 0x6b,
	0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x93, 0x94, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x53, 0x5f, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x0d, 0x63, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3e,
	0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x94,
	0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x0c, 0x63, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x96,
	0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x68, 0x6f, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x53, 0x68, 0x6f, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x44,
	0x0a, 0x0e, 0x63, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x98, 0x94, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x99, 0x94, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x53, 0x5f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x4f,
	0x6e, 0x50, 0x6f, 0x73, 0x48, 0x00, 0x52, 0x10, 0x63, 0x73, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43,
	0x61, 0x73, 0x74, 0x4f, 0x6e, 0x50, 0x6f, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x6e, 0x65, 0x5f,
	0x6f, 0x66, 0x42, 0x11, 0x5a, 0x0f, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x6f, 0x75, 0x74,
}

var (
	file_msg_types_cs_proto_rawDescOnce sync.Once
	file_msg_types_cs_proto_rawDescData = file_msg_types_cs_proto_rawDesc
)

func file_msg_types_cs_proto_rawDescGZIP() []byte {
	file_msg_types_cs_proto_rawDescOnce.Do(func() {
		file_msg_types_cs_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_types_cs_proto_rawDescData)
	})
	return file_msg_types_cs_proto_rawDescData
}

var file_msg_types_cs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_msg_types_cs_proto_goTypes = []interface{}{
	(*CSMessage)(nil),             // 0: am.protocol.CSMessage
	(*CS_Login)(nil),              // 1: am.protocol.CS_Login
	(*CS_Create)(nil),             // 2: am.protocol.CS_Create
	(*CS_Gm)(nil),                 // 3: am.protocol.CS_Gm
	(*CS_Ready)(nil),              // 4: am.protocol.CS_Ready
	(*CS_HeroDraw)(nil),           // 5: am.protocol.CS_HeroDraw
	(*CS_HeroLevelUp)(nil),        // 6: am.protocol.CS_HeroLevelUp
	(*CS_HeroStarUp)(nil),         // 7: am.protocol.CS_HeroStarUp
	(*CS_HeroList)(nil),           // 8: am.protocol.CS_HeroList
	(*CS_BagList)(nil),            // 9: am.protocol.CS_BagList
	(*CS_ExpandBag)(nil),          // 10: am.protocol.CS_ExpandBag
	(*CS_UseSinglePickBox)(nil),   // 11: am.protocol.CS_UseSinglePickBox
	(*CS_SaleItem)(nil),           // 12: am.protocol.CS_SaleItem
	(*CS_Draw)(nil),               // 13: am.protocol.CS_Draw
	(*CS_DrawReward)(nil),         // 14: am.protocol.CS_DrawReward
	(*CS_GetRankList)(nil),        // 15: am.protocol.CS_GetRankList
	(*CS_RankLike)(nil),           // 16: am.protocol.CS_RankLike
	(*CS_GetMailList)(nil),        // 17: am.protocol.CS_GetMailList
	(*CS_ReadMail)(nil),           // 18: am.protocol.CS_ReadMail
	(*CS_ReceiveMail)(nil),        // 19: am.protocol.CS_ReceiveMail
	(*CS_DeleteMail)(nil),         // 20: am.protocol.CS_DeleteMail
	(*CS_GetShop)(nil),            // 21: am.protocol.CS_GetShop
	(*CS_ShopBuy)(nil),            // 22: am.protocol.CS_ShopBuy
	(*CS_RefreshShop)(nil),        // 23: am.protocol.CS_RefreshShop
	(*CS_TowerFight)(nil),         // 24: am.protocol.CS_TowerFight
	(*CS_TowerLike)(nil),          // 25: am.protocol.CS_TowerLike
	(*CS_GuildCreate)(nil),        // 26: am.protocol.CS_GuildCreate
	(*CS_GuildDismiss)(nil),       // 27: am.protocol.CS_GuildDismiss
	(*CS_GuildApplyJoin)(nil),     // 28: am.protocol.CS_GuildApplyJoin
	(*CS_GuildApplyCheck)(nil),    // 29: am.protocol.CS_GuildApplyCheck
	(*CS_GuildLeave)(nil),         // 30: am.protocol.CS_GuildLeave
	(*CS_GuildKick)(nil),          // 31: am.protocol.CS_GuildKick
	(*CS_GuildMessage)(nil),       // 32: am.protocol.CS_GuildMessage
	(*CS_GetGuildList)(nil),       // 33: am.protocol.CS_GetGuildList
	(*CS_GetFriendList)(nil),      // 34: am.protocol.CS_GetFriendList
	(*CS_FriendRecommend)(nil),    // 35: am.protocol.CS_FriendRecommend
	(*CS_FriendSearch)(nil),       // 36: am.protocol.CS_FriendSearch
	(*CS_FriendApply)(nil),        // 37: am.protocol.CS_FriendApply
	(*CS_FriendApplyHandle)(nil),  // 38: am.protocol.CS_FriendApplyHandle
	(*CS_AddBalckList)(nil),       // 39: am.protocol.CS_AddBalckList
	(*CS_BattleHeartBeat)(nil),    // 40: am.protocol.CS_BattleHeartBeat
	(*CS_EnterStage)(nil),         // 41: am.protocol.CS_EnterStage
	(*CS_BattleLogin)(nil),        // 42: am.protocol.CS_BattleLogin
	(*CS_BattleReady)(nil),        // 43: am.protocol.CS_BattleReady
	(*CS_BattleGm)(nil),           // 44: am.protocol.CS_BattleGm
	(*CS_Move)(nil),               // 45: am.protocol.CS_Move
	(*CS_QuickTakeRoom)(nil),      // 46: am.protocol.CS_QuickTakeRoom
	(*CS_CollectionResource)(nil), // 47: am.protocol.CS_CollectionResource
	(*CS_CastSkill)(nil),          // 48: am.protocol.CS_CastSkill
	(*CS_SyncDamage)(nil),         // 49: am.protocol.CS_SyncDamage
	(*CS_ReloadGun)(nil),          // 50: am.protocol.CS_ReloadGun
	(*CS_ShiftGun)(nil),           // 51: am.protocol.CS_ShiftGun
	(*CS_StopMove)(nil),           // 52: am.protocol.CS_StopMove
	(*CS_StageRestart)(nil),       // 53: am.protocol.CS_StageRestart
	(*CS_PickAbility)(nil),        // 54: am.protocol.CS_PickAbility
	(*CS_TaskList)(nil),           // 55: am.protocol.CS_TaskList
	(*CS_ShotMove)(nil),           // 56: am.protocol.CS_ShotMove
	(*CS_EnterScene)(nil),         // 57: am.protocol.CS_EnterScene
	(*CS_SkillCastOnPos)(nil),     // 58: am.protocol.CS_SkillCastOnPos
}
var file_msg_types_cs_proto_depIdxs = []int32{
	1,  // 0: am.protocol.CSMessage.cs_login:type_name -> am.protocol.CS_Login
	2,  // 1: am.protocol.CSMessage.cs_create:type_name -> am.protocol.CS_Create
	3,  // 2: am.protocol.CSMessage.cs_gm:type_name -> am.protocol.CS_Gm
	4,  // 3: am.protocol.CSMessage.cs_ready:type_name -> am.protocol.CS_Ready
	5,  // 4: am.protocol.CSMessage.cs_hero_draw:type_name -> am.protocol.CS_HeroDraw
	6,  // 5: am.protocol.CSMessage.cs_hero_level_up:type_name -> am.protocol.CS_HeroLevelUp
	7,  // 6: am.protocol.CSMessage.cs_hero_star_up:type_name -> am.protocol.CS_HeroStarUp
	8,  // 7: am.protocol.CSMessage.cs_hero_list:type_name -> am.protocol.CS_HeroList
	9,  // 8: am.protocol.CSMessage.cs_bag_list:type_name -> am.protocol.CS_BagList
	10, // 9: am.protocol.CSMessage.cs_expand_bag:type_name -> am.protocol.CS_ExpandBag
	11, // 10: am.protocol.CSMessage.cs_use_singlepickbox:type_name -> am.protocol.CS_UseSinglePickBox
	12, // 11: am.protocol.CSMessage.cs_sale_item:type_name -> am.protocol.CS_SaleItem
	13, // 12: am.protocol.CSMessage.cs_draw:type_name -> am.protocol.CS_Draw
	14, // 13: am.protocol.CSMessage.cs_draw_reward:type_name -> am.protocol.CS_DrawReward
	15, // 14: am.protocol.CSMessage.cs_rank_list:type_name -> am.protocol.CS_GetRankList
	16, // 15: am.protocol.CSMessage.cs_rank_like:type_name -> am.protocol.CS_RankLike
	17, // 16: am.protocol.CSMessage.cs_mail_list:type_name -> am.protocol.CS_GetMailList
	18, // 17: am.protocol.CSMessage.cs_read_mail:type_name -> am.protocol.CS_ReadMail
	19, // 18: am.protocol.CSMessage.cs_receive_mail:type_name -> am.protocol.CS_ReceiveMail
	20, // 19: am.protocol.CSMessage.cs_delete_mail:type_name -> am.protocol.CS_DeleteMail
	21, // 20: am.protocol.CSMessage.cs_get_shop:type_name -> am.protocol.CS_GetShop
	22, // 21: am.protocol.CSMessage.cs_shop_buy:type_name -> am.protocol.CS_ShopBuy
	23, // 22: am.protocol.CSMessage.cs_shop_refresh:type_name -> am.protocol.CS_RefreshShop
	24, // 23: am.protocol.CSMessage.cs_tower_fight:type_name -> am.protocol.CS_TowerFight
	25, // 24: am.protocol.CSMessage.cs_tower_like:type_name -> am.protocol.CS_TowerLike
	26, // 25: am.protocol.CSMessage.cs_guild_create:type_name -> am.protocol.CS_GuildCreate
	27, // 26: am.protocol.CSMessage.cs_guild_dismiss:type_name -> am.protocol.CS_GuildDismiss
	28, // 27: am.protocol.CSMessage.cs_guild_apply_join:type_name -> am.protocol.CS_GuildApplyJoin
	29, // 28: am.protocol.CSMessage.cs_guild_apply_check:type_name -> am.protocol.CS_GuildApplyCheck
	30, // 29: am.protocol.CSMessage.cs_guild_leave:type_name -> am.protocol.CS_GuildLeave
	31, // 30: am.protocol.CSMessage.cs_guild_kick:type_name -> am.protocol.CS_GuildKick
	32, // 31: am.protocol.CSMessage.cs_guild_message:type_name -> am.protocol.CS_GuildMessage
	33, // 32: am.protocol.CSMessage.cs_get_guildlist:type_name -> am.protocol.CS_GetGuildList
	34, // 33: am.protocol.CSMessage.cs_get_friendlist:type_name -> am.protocol.CS_GetFriendList
	35, // 34: am.protocol.CSMessage.cs_friend_recommend:type_name -> am.protocol.CS_FriendRecommend
	36, // 35: am.protocol.CSMessage.cs_friend_search:type_name -> am.protocol.CS_FriendSearch
	37, // 36: am.protocol.CSMessage.cs_friend_apply:type_name -> am.protocol.CS_FriendApply
	38, // 37: am.protocol.CSMessage.cs_friend_apply_handle:type_name -> am.protocol.CS_FriendApplyHandle
	39, // 38: am.protocol.CSMessage.cs_add_blacklist:type_name -> am.protocol.CS_AddBalckList
	40, // 39: am.protocol.CSMessage.cs_battle_heart_beat:type_name -> am.protocol.CS_BattleHeartBeat
	41, // 40: am.protocol.CSMessage.cs_enter_stage:type_name -> am.protocol.CS_EnterStage
	42, // 41: am.protocol.CSMessage.cs_battle_login:type_name -> am.protocol.CS_BattleLogin
	43, // 42: am.protocol.CSMessage.cs_battle_ready:type_name -> am.protocol.CS_BattleReady
	44, // 43: am.protocol.CSMessage.cs_battle_gm:type_name -> am.protocol.CS_BattleGm
	45, // 44: am.protocol.CSMessage.cs_move:type_name -> am.protocol.CS_Move
	46, // 45: am.protocol.CSMessage.cs_quick_take_room:type_name -> am.protocol.CS_QuickTakeRoom
	47, // 46: am.protocol.CSMessage.cs_collection_resource:type_name -> am.protocol.CS_CollectionResource
	48, // 47: am.protocol.CSMessage.cs_cast_skill:type_name -> am.protocol.CS_CastSkill
	49, // 48: am.protocol.CSMessage.cs_sync_damage:type_name -> am.protocol.CS_SyncDamage
	50, // 49: am.protocol.CSMessage.cs_reload_gun:type_name -> am.protocol.CS_ReloadGun
	51, // 50: am.protocol.CSMessage.cs_shift_gun:type_name -> am.protocol.CS_ShiftGun
	52, // 51: am.protocol.CSMessage.cs_stop_move:type_name -> am.protocol.CS_StopMove
	53, // 52: am.protocol.CSMessage.cs_stage_restart:type_name -> am.protocol.CS_StageRestart
	54, // 53: am.protocol.CSMessage.cs_pick_ability:type_name -> am.protocol.CS_PickAbility
	55, // 54: am.protocol.CSMessage.cs_task_list:type_name -> am.protocol.CS_TaskList
	56, // 55: am.protocol.CSMessage.cs_shot_move:type_name -> am.protocol.CS_ShotMove
	57, // 56: am.protocol.CSMessage.cs_enter_scene:type_name -> am.protocol.CS_EnterScene
	58, // 57: am.protocol.CSMessage.cs_skill_cast_on_pos:type_name -> am.protocol.CS_SkillCastOnPos
	58, // [58:58] is the sub-list for method output_type
	58, // [58:58] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_msg_types_cs_proto_init() }
func file_msg_types_cs_proto_init() {
	if File_msg_types_cs_proto != nil {
		return
	}
	file_login_proto_init()
	file_hero_proto_init()
	file_bag_proto_init()
	file_draw_proto_init()
	file_rank_proto_init()
	file_mail_proto_init()
	file_shop_proto_init()
	file_tower_proto_init()
	file_battle_proto_init()
	file_guild_proto_init()
	file_friend_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_msg_types_cs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_msg_types_cs_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CSMessage_CsLogin)(nil),
		(*CSMessage_CsCreate)(nil),
		(*CSMessage_CsGm)(nil),
		(*CSMessage_CsReady)(nil),
		(*CSMessage_CsHeroDraw)(nil),
		(*CSMessage_CsHeroLevelUp)(nil),
		(*CSMessage_CsHeroStarUp)(nil),
		(*CSMessage_CsHeroList)(nil),
		(*CSMessage_CsBagList)(nil),
		(*CSMessage_CsExpandBag)(nil),
		(*CSMessage_CsUseSinglepickbox)(nil),
		(*CSMessage_CsSaleItem)(nil),
		(*CSMessage_CsDraw)(nil),
		(*CSMessage_CsDrawReward)(nil),
		(*CSMessage_CsRankList)(nil),
		(*CSMessage_CsRankLike)(nil),
		(*CSMessage_CsMailList)(nil),
		(*CSMessage_CsReadMail)(nil),
		(*CSMessage_CsReceiveMail)(nil),
		(*CSMessage_CsDeleteMail)(nil),
		(*CSMessage_CsGetShop)(nil),
		(*CSMessage_CsShopBuy)(nil),
		(*CSMessage_CsShopRefresh)(nil),
		(*CSMessage_CsTowerFight)(nil),
		(*CSMessage_CsTowerLike)(nil),
		(*CSMessage_CsGuildCreate)(nil),
		(*CSMessage_CsGuildDismiss)(nil),
		(*CSMessage_CsGuildApplyJoin)(nil),
		(*CSMessage_CsGuildApplyCheck)(nil),
		(*CSMessage_CsGuildLeave)(nil),
		(*CSMessage_CsGuildKick)(nil),
		(*CSMessage_CsGuildMessage)(nil),
		(*CSMessage_CsGetGuildlist)(nil),
		(*CSMessage_CsGetFriendlist)(nil),
		(*CSMessage_CsFriendRecommend)(nil),
		(*CSMessage_CsFriendSearch)(nil),
		(*CSMessage_CsFriendApply)(nil),
		(*CSMessage_CsFriendApplyHandle)(nil),
		(*CSMessage_CsAddBlacklist)(nil),
		(*CSMessage_CsBattleHeartBeat)(nil),
		(*CSMessage_CsEnterStage)(nil),
		(*CSMessage_CsBattleLogin)(nil),
		(*CSMessage_CsBattleReady)(nil),
		(*CSMessage_CsBattleGm)(nil),
		(*CSMessage_CsMove)(nil),
		(*CSMessage_CsQuickTakeRoom)(nil),
		(*CSMessage_CsCollectionResource)(nil),
		(*CSMessage_CsCastSkill)(nil),
		(*CSMessage_CsSyncDamage)(nil),
		(*CSMessage_CsReloadGun)(nil),
		(*CSMessage_CsShiftGun)(nil),
		(*CSMessage_CsStopMove)(nil),
		(*CSMessage_CsStageRestart)(nil),
		(*CSMessage_CsPickAbility)(nil),
		(*CSMessage_CsTaskList)(nil),
		(*CSMessage_CsShotMove)(nil),
		(*CSMessage_CsEnterScene)(nil),
		(*CSMessage_CsSkillCastOnPos)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_types_cs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_types_cs_proto_goTypes,
		DependencyIndexes: file_msg_types_cs_proto_depIdxs,
		MessageInfos:      file_msg_types_cs_proto_msgTypes,
	}.Build()
	File_msg_types_cs_proto = out.File
	file_msg_types_cs_proto_rawDesc = nil
	file_msg_types_cs_proto_goTypes = nil
	file_msg_types_cs_proto_depIdxs = nil
}
